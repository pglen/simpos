     1                                  BITS 64
     2                                  ORG 0x001E0000
     3                                  
     4                                  %include 'api/libBareMetal.asm'
     5                              <1> ; =============================================================================
     6                              <1> ; BareMetal -- a 64-bit OS written in Assembly for x86-64 systems
     7                              <1> ; Copyright (C) 2008-2020 Return Infinity -- see LICENSE.TXT
     8                              <1> ;
     9                              <1> ; Version 1.0
    10                              <1> ; =============================================================================
    11                              <1> 
    12                              <1> 
    13                              <1> b_input			equ 0x0000000000100010	; Scans keyboard for input. OUT: AL = 0 if no key pressed, otherwise ASCII code
    14                              <1> b_output		equ 0x0000000000100018	; Displays a number of characters. IN: RSI = message location, RCX = number of characters
    15                              <1> 
    16                              <1> b_ethernet_tx		equ 0x0000000000100020	; Transmit a packet via Ethernet. IN: RSI = Memory location where data is stored, RDI = Pointer to 48 bit destination address, BX = Type of packet (If set to 0 then the EtherType will be set to the length of data), CX = Length of data
    17                              <1> b_ethernet_rx		equ 0x0000000000100028	; Polls the Ethernet card for received data. IN: RDI = Memory location where packet will be stored. OUT: RCX = Length of packet
    18                              <1> 
    19                              <1> b_disk_read		equ 0x0000000000100030	; Read from the disk.
    20                              <1> b_disk_write		equ 0x0000000000100038	; Write to the disk.
    21                              <1> 
    22                              <1> b_config		equ 0x0000000000100040	; View/modify configuration. IN: RCX = Function, RAX = Variable 1, RDX = Variable 2. OUT: RAX = Result
    23                              <1> b_system		equ 0x0000000000100048	; Call a system function. IN: RCX = Function, RAX = Variable 1, RDX = Variable 2. Out: RAX = Result 1, RDX = Result 2
    24                              <1> b_dummy   		equ 0x0000000000100050	; Call a dummy function. IN: None OUT: None
    25                              <1> 
    26                              <1> ; Index for b_config calls
    27                              <1> timecounter		equ 0
    28                              <1> smp_get_id		equ 1
    29                              <1> networkcallback_get	equ 3
    30                              <1> networkcallback_set	equ 4
    31                              <1> clockcallback_get	equ 5
    32                              <1> clockcallback_set	equ 6
    33                              <1> mac			equ 30
    34                              <1> pci_read		equ 0x40
    35                              <1> pci_write		equ 0x41
    36                              <1> stdout_set		equ 0x42
    37                              <1> stdout_get		equ 0x43
    38                              <1> drive_id		equ 0x50
    39                              <1> 
    40                              <1> 
    41                              <1> ; Index for b_system calls
    42                              <1> 
    43                              <1> smp_lock		equ 2
    44                              <1> smp_unlock		equ 3
    45                              <1> debug_dump_mem		equ 4
    46                              <1> debug_dump_rax		equ 5
    47                              <1> get_argc		equ 6
    48                              <1> get_argv		equ 7
    49                              <1> delay			equ 6
    50                              <1> ethernet_status		equ 7
    51                              <1> mem_get_free		equ 8
    52                              <1> smp_numcores		equ 9
    53                              <1> smp_set			  equ 10
    54                              <1> reset			equ 256
    55                              <1> 
    56                              <1> ; =============================================================================
    57                              <1> ; EOF
     5                                  
     6                                  start:
     7                                      ; Grab video values from Pure64
     8 00000000 BE80500000                  mov rsi, 0x5080
     9 00000005 31C0                        xor eax, eax
    10 00000007 AD                          lodsd    			; VIDEO_BASE
    11 00000008 48890425[F30C0000]          mov [VideoBase], rax
    12 00000010 31C0                        xor eax, eax
    13 00000012 31C9                        xor ecx, ecx
    14 00000014 66AD                        lodsw    			; VIDEO_X
    15 00000016 66890425[0F0D0000]          mov [VideoX], ax    	; ex: 1024
    16 0000001E 31D2                        xor edx, edx
    17 00000020 8A0C25[1D0D0000]            mov cl, [font_width]
    18 00000027 66F7F1                      div cx
    19 0000002A 66890425[150D0000]          mov [Screen_Cols], ax
    20 00000032 66AD                        lodsw    			; VIDEO_Y
    21 00000034 66890425[110D0000]          mov [VideoY], ax    	; ex: 768
    22 0000003C 31D2                        xor edx, edx
    23 0000003E 8A0C25[1C0D0000]            mov cl, [font_height]
    24 00000045 66F7F1                      div cx
    25 00000048 66890425[130D0000]          mov [Screen_Rows], ax
    26 00000050 AC                          lodsb    			; VIDEO_DEPTH
    27 00000051 880425[1B0D0000]            mov [VideoDepth], al
    28                                  
    29                                      ; Calculate screen parameters
    30 00000058 31C0                        xor eax, eax
    31 0000005A 31C9                        xor ecx, ecx
    32 0000005C 668B0425[0F0D0000]          mov ax, [VideoX]
    33 00000064 668B0C25[110D0000]          mov cx, [VideoY]
    34 0000006C F7E1                        mul ecx
    35 0000006E 890425[FB0C0000]            mov [Screen_Pixels], eax
    36 00000075 31C9                        xor ecx, ecx
    37 00000077 8A0C25[1B0D0000]            mov cl, [VideoDepth]
    38 0000007E C0E903                      shr cl, 3
    39 00000081 F7E1                        mul ecx
    40 00000083 890425[FF0C0000]            mov [Screen_Bytes], eax
    41 0000008A 31C0                        xor eax, eax
    42 0000008C 31C9                        xor ecx, ecx
    43 0000008E 668B0425[0F0D0000]          mov ax, [VideoX]
    44 00000096 8A0C25[1C0D0000]            mov cl, [font_height]
    45 0000009D 66F7E1                      mul cx
    46 000000A0 8A0C25[1B0D0000]            mov cl, [VideoDepth]
    47 000000A7 C0E903                      shr cl, 3
    48 000000AA F7E1                        mul ecx
    49 000000AC 890425[030D0000]            mov dword [Screen_Row_2], eax
    50                                  
    51                                      ; Set foreground/background color
    52 000000B3 B8FFFFFF00                  mov eax, 0x00FFFFFF
    53 000000B8 890425[070D0000]            mov [FG_Color], eax
    54 000000BF B840404000                  mov eax, 0x00404040
    55 000000C4 890425[0B0D0000]            mov [BG_Color], eax
    56                                  
    57 000000CB E8E2050000                  call screen_clear
    58                                  
    59                                      ; Overwrite the kernel output function so output goes to the screen instead of the serial port
    60 000000D0 48B8-                       mov rax, output_chars
    60 000000D2 [1606000000000000] 
    61 000000DA BF18001000                  mov rdi, 0x100018
    62 000000DF 48AB                        stosq
    63                                  
    64                                      ; Move cursor to bottom of screen
    65 000000E1 668B0425[130D0000]          mov ax, [Screen_Rows]
    66 000000E9 66FFC8                      dec ax
    67 000000EC 66890425[170D0000]          mov [Screen_Cursor_Row], ax
    68                                  
    69 000000F4 48BE-                       mov rsi, banner
    69 000000F6 [940B000000000000] 
    70 000000FE E8F7030000                  call output
    71                                  
    72                                      ; Dump memory map
    73                                      ;mov rsi, 0x6000
    74                                      ;mov rcx,128
    75                                      ;call os_debug_dump_mem
    76                                  
    77 00000103 E8CE070000                  call show_memap
    78                                  
    79                                      ; test register dump
    80                                      ;mov rax, 0x4444444444444444
    81                                      ;call os_debug_dump_ax
    82                                      ;mov rsi, newline
    83                                      ;call output
    84                                      ;
    85                                      ;mov rax, 0x4444444444444444
    86                                      ;call os_debug_dump_eax
    87                                      ;mov rsi, newline
    88                                      ;call output
    89                                      ;
    90                                      ;mov rax, 0x4444444444444444
    91                                      ;call os_debug_dump_rax
    92                                      ;mov rsi, newline
    93                                      ;call output
    94                                      ;
    95                                      ;mov rsi, newline
    96                                      ;call output
    97                                  
    98                                  
    99                                      ; Output system details
   100 00000108 48BE-                       mov rsi, cpumsg
   100 0000010A [7D0C000000000000] 
   101 00000112 E8E3030000                  call output
   102 00000117 31C0                        xor eax, eax
   103 00000119 BE12500000                  mov rsi, 0x5012
   104 0000011E 66AD                        lodsw
   105 00000120 48BF-                       mov rdi, temp_string
   105 00000122 [9F11000000000000] 
   106 0000012A 4889FE                      mov rsi, rdi
   107 0000012D E8EC050000                  call string_from_int
   108 00000132 E8C3030000                  call output
   109 00000137 48BE-                       mov rsi, coresmsg
   109 00000139 [A70C000000000000] 
   110 00000141 E8B4030000                  call output
   111 00000146 BE10500000                  mov rsi, 0x5010
   112 0000014B 66AD                        lodsw
   113 0000014D 48BF-                       mov rdi, temp_string
   113 0000014F [9F11000000000000] 
   114 00000157 4889FE                      mov rsi, rdi
   115 0000015A E8BF050000                  call string_from_int
   116 0000015F E896030000                  call output
   117 00000164 48BE-                       mov rsi, mhzmsg
   117 00000166 [A20C000000000000] 
   118 0000016E E887030000                  call output
   119 00000173 48BE-                       mov rsi, memmsg
   119 00000175 [850C000000000000] 
   120 0000017D E878030000                  call output
   121 00000182 BE20500000                  mov rsi, 0x5020
   122 00000187 AD                          lodsd
   123 00000188 48BF-                       mov rdi, temp_string
   123 0000018A [9F11000000000000] 
   124 00000192 4889FE                      mov rsi, rdi
   125 00000195 E884050000                  call string_from_int
   126 0000019A E85B030000                  call output
   127 0000019F 48BE-                       mov rsi, mibmsg
   127 000001A1 [9D0C000000000000] 
   128 000001A9 E84C030000                  call output
   129 000001AE 48BE-                       mov rsi, closebracketmsg
   129 000001B0 [AF0C000000000000] 
   130 000001B8 E83D030000                  call output
   131 000001BD 48BE-                       mov rsi, newline
   131 000001BF [EF0C000000000000] 
   132 000001C7 E82E030000                  call output
   133 000001CC E829030000                  call output
   134                                  
   135                                  poll:
   136 000001D1 48BE-                       mov rsi, prompt
   136 000001D3 [780A000000000000] 
   137 000001DB E81A030000                  call output
   138 000001E0 48BF-                       mov rdi, temp_string
   138 000001E2 [9F11000000000000] 
   139 000001EA B964000000                  mov rcx, 100
   140 000001EF E8E5010000                  call input
   141                                      ; TODO clear leading/trailing spaces to sanitize input
   142                                  
   143 000001F4 48BE-                       mov rsi, command_exec
   143 000001F6 [7D0B000000000000] 
   144 000001FE E8F3040000                  call string_compare
   145 00000203 726E                        jc exec
   146                                  
   147 00000205 48BE-                       mov rsi, command_dir
   147 00000207 [820B000000000000] 
   148 0000020F E8E2040000                  call string_compare
   149 00000214 7267                        jc dir
   150                                  
   151 00000216 48BE-                       mov rsi, command_ver
   151 00000218 [860B000000000000] 
   152 00000220 E8D1040000                  call string_compare
   153 00000225 0F8208010000                jc print_ver
   154                                  
   155 0000022B 48BE-                       mov rsi, command_load
   155 0000022D [8A0B000000000000] 
   156 00000235 E8BC040000                  call string_compare
   157 0000023A 0F8207010000                jc load
   158                                  
   159 00000240 48BE-                       mov rsi, command_help
   159 00000242 [8F0B000000000000] 
   160 0000024A E8A7040000                  call string_compare
   161 0000024F 0F8270010000                jc help
   162                                  
   163 00000255 4883F900                    cmp rcx, 0    		; If no characters were entered show prompt again
   164 00000259 0F8472FFFFFF                je poll
   165 0000025F 48BE-                       mov rsi, message_unknown
   165 00000261 [940A000000000000] 
   166 00000269 E88C020000                  call output
   167 0000026E E95EFFFFFF                  jmp poll
   168                                  
   169                                  exec:
   170 00000273 E8(00002000)                call 0x200000
   171 00000278 E954FFFFFF                  jmp poll
   172                                  
   173                                  dir:
   174 0000027D 48BE-                       mov rsi, dirmsg
   174 0000027F [B10C000000000000] 
   175 00000287 E86E020000                  call output
   176 0000028C 48BF-                       mov rdi, temp_string
   176 0000028E [9F11000000000000] 
   177 00000296 4889FE                      mov rsi, rdi
   178 00000299 B801000000                  mov rax, 1
   179 0000029E B901000000                  mov rcx, 1
   180 000002A3 BA00000000                  mov rdx, 0
   181 000002A8 FF142530001000              call [b_disk_read]    	; Load the 4K BMFS file table
   182 000002AF B801000000                  mov rax, 1
   183                                  dir_next:
   184 000002B4 803E00                      cmp byte [rsi], 0    	; 0 means we're at the end of the list
   185 000002B7 7475                        je dir_end
   186                                  
   187 000002B9 56                          push rsi
   188 000002BA 48BF-                       mov rdi, temp_string1
   188 000002BC [A011000000000000] 
   189 000002C4 4889FE                      mov rsi, rdi
   190 000002C7 E852040000                  call string_from_int
   191 000002CC E829020000                  call output
   192 000002D1 48BE-                       mov rsi, tab
   192 000002D3 [F10C000000000000] 
   193 000002DB E81A020000                  call output
   194 000002E0 0401                        add al, 1
   195 000002E2 5E                          pop rsi
   196                                  
   197 000002E3 E812020000                  call output    		; Output file name
   198 000002E8 4883C630                    add rsi, 48
   199 000002EC 50                          push rax
   200 000002ED 488B06                      mov rax, [rsi]
   201 000002F0 56                          push rsi
   202 000002F1 48BE-                       mov rsi, tab
   202 000002F3 [F10C000000000000] 
   203 000002FB E8FA010000                  call output
   204 00000300 48BF-                       mov rdi, temp_string1
   204 00000302 [A011000000000000] 
   205 0000030A 4889FE                      mov rsi, rdi
   206 0000030D E80C040000                  call string_from_int
   207 00000312 E8E3010000                  call output
   208 00000317 48BE-                       mov rsi, newline
   208 00000319 [EF0C000000000000] 
   209 00000321 E8D4010000                  call output
   210 00000326 5E                          pop rsi
   211 00000327 58                          pop rax
   212 00000328 4883C610                    add rsi, 16    		; Next entry
   213 0000032C EB86                        jmp dir_next
   214                                  dir_end:
   215 0000032E E99EFEFFFF                  jmp poll
   216                                  
   217                                  print_ver:
   218 00000333 48BE-                       mov rsi, message_ver
   218 00000335 [7B0A000000000000] 
   219 0000033D E8B8010000                  call output
   220 00000342 E98AFEFFFF                  jmp poll
   221                                  
   222                                  load:
   223 00000347 48BE-                       mov rsi, message_load
   223 00000349 [800A000000000000] 
   224 00000351 E8A4010000                  call output
   225 00000356 48BF-                       mov rdi, temp_string
   225 00000358 [9F11000000000000] 
   226 00000360 4889FE                      mov rsi, rdi
   227 00000363 B902000000                  mov rcx, 2
   228 00000368 E86C000000                  call input
   229 0000036D E8D5030000                  call string_to_int
   230 00000372 4883E801                    sub rax, 1    		; Files are indexed from 0
   231 00000376 50                          push rax    		; Save the file #
   232                                      ; check value
   233                                      ; load file table
   234 00000377 48BF-                       mov rdi, temp_string
   234 00000379 [9F11000000000000] 
   235 00000381 B801000000                  mov rax, 1
   236 00000386 B901000000                  mov rcx, 1
   237 0000038B BA00000000                  mov rdx, 0
   238 00000390 FF142530001000              call [b_disk_read]
   239                                      ; offset to file number and starting sector
   240 00000397 59                          pop rcx    			; Restore the file #
   241 00000398 48C1E106                    shl rcx, 6
   242 0000039C 4883C120                    add rcx, 32    		; Offset to starting block # in BMFS file record
   243 000003A0 4801CF                      add rdi, rcx
   244 000003A3 488B07                      mov rax, [rdi]
   245 000003A6 48C1E009                    shl rax, 9    		; Shift left by 9 to convert 2M block to 4K sector
   246                                      ; size
   247                                      ; TODO
   248                                      ; load to memory, use RAX for starting sector
   249 000003AA BF00002000                  mov rdi, 0x200000
   250 000003AF B901000000                  mov rcx, 1    		; Loading 4K for now
   251 000003B4 BA00000000                  mov rdx, 0
   252 000003B9 FF142530001000              call [b_disk_read]
   253                                  
   254 000003C0 E90CFEFFFF                  jmp poll
   255                                  
   256                                  help:
   257 000003C5 48BE-                       mov rsi, message_help
   257 000003C7 [A50A000000000000] 
   258 000003CF E826010000                  call output
   259 000003D4 E9F8FDFFFF                  jmp poll
   260                                  
   261                                  ; -----------------------------------------------------------------------------
   262                                  ; input -- Take string from keyboard entry
   263                                  ;  IN:    RDI = location where string will be stored
   264                                  ;    RCX = maximum number of characters to accept
   265                                  ; OUT:    RCX = length of string that was received (NULL not counted)
   266                                  ;    All other registers preserved
   267                                  input:
   268 000003D9 57                          push rdi
   269 000003DA 52                          push rdx    		; Counter to keep track of max accepted characters
   270 000003DB 50                          push rax
   271                                  
   272 000003DC 4889CA                      mov rdx, rcx    		; Max chars to accept
   273 000003DF 31C9                        xor ecx, ecx    		; Offset from start
   274                                  
   275                                   input_more:
   276 000003E1 B05F                        mov al, '_'
   277 000003E3 E81F010000                  call output_char
   278 000003E8 E8AE000000                  call dec_cursor
   279 000003ED FF142510001000              call [b_input]
   280 000003F4 7341                        jnc input_halt    		; No key entered... halt until an interrupt is received
   281 000003F6 3C1C                        cmp al, 0x1C    		; If Enter key pressed, finish
   282 000003F8 7440                        je input_done
   283 000003FA 3C0E                        cmp al, 0x0E    		; Backspace
   284 000003FC 7418                        je input_backspace
   285 000003FE 3C20                        cmp al, 32    		; In ASCII range (32 - 126)?
   286 00000400 7CDF                        jl input_more
   287 00000402 3C7E                        cmp al, 126
   288 00000404 7FDB                        jg input_more
   289 00000406 4839D1                      cmp rcx, rdx    		; Check if we have reached the max number of chars
   290 00000409 74D6                        je input_more    		; Jump if we have (should beep as well)
   291 0000040B AA                          stosb    			; Store AL at RDI and increment RDI by 1
   292 0000040C 48FFC1                      inc rcx    			; Increment the counter
   293 0000040F E8F3000000                  call output_char    	; Display char
   294 00000414 EBCB                        jmp input_more
   295                                  
   296                                   input_backspace:
   297 00000416 4885C9                      test rcx, rcx    		; backspace at the beginning? get a new char
   298 00000419 74C6                        jz input_more
   299 0000041B B020                        mov al, ' '    		; 0x20 is the character for a space
   300 0000041D E8E5000000                  call output_char    	; Write over the last typed character with the space
   301 00000422 E874000000                  call dec_cursor    		; Decrement the cursor again
   302 00000427 E86F000000                  call dec_cursor    		; Decrement the cursor
   303 0000042C 48FFCF                      dec rdi    			; go back one in the string
   304 0000042F C60700                      mov byte [rdi], 0x00    	; NULL out the char
   305 00000432 48FFC9                      dec rcx    			; decrement the counter by one
   306 00000435 EBAA                        jmp input_more
   307                                  
   308                                   input_halt:
   309 00000437 F4                          hlt    			; Halt until another keystroke is received
   310 00000438 EBA7                        jmp input_more
   311                                  
   312                                   input_done:
   313 0000043A 30C0                        xor al, al
   314 0000043C AA                          stosb    			; We NULL terminate the string
   315 0000043D B020                        mov al, ' '
   316 0000043F E8C3000000                  call output_char
   317 00000444 E880000000                  call output_newline
   318                                  
   319 00000449 58                          pop rax
   320 0000044A 5A                          pop rdx
   321 0000044B 5F                          pop rdi
   322 0000044C C3                          ret
   323                                  ; -----------------------------------------------------------------------------
   324                                  
   325                                  
   326                                  ; -----------------------------------------------------------------------------
   327                                  ; inc_cursor -- Increment the cursor by one, scroll if needed
   328                                  ;  IN:    Nothing
   329                                  ; OUT:    All registers preserved
   330                                  inc_cursor:
   331 0000044D 50                          push rax
   332                                  
   333 0000044E 66FF0425[190D0000]          inc word [Screen_Cursor_Col]
   334 00000456 668B0425[190D0000]          mov ax, [Screen_Cursor_Col]
   335 0000045E 663B0425[150D0000]          cmp ax, [Screen_Cols]
   336 00000466 7531                        jne inc_cursor_done
   337 00000468 66C70425[190D0000]-         mov word [Screen_Cursor_Col], 0
   337 00000470 0000               
   338 00000472 66FF0425[170D0000]          inc word [Screen_Cursor_Row]
   339 0000047A 668B0425[170D0000]          mov ax, [Screen_Cursor_Row]
   340 00000482 663B0425[130D0000]          cmp ax, [Screen_Rows]
   341 0000048A 750D                        jne inc_cursor_done
   342 0000048C E8F6010000                  call screen_scroll
   343 00000491 66FF0C25[170D0000]          dec word [Screen_Cursor_Row]
   344                                  
   345                                   inc_cursor_done:
   346 00000499 58                          pop rax
   347 0000049A C3                          ret
   348                                  ; -----------------------------------------------------------------------------
   349                                  
   350                                  
   351                                  ; -----------------------------------------------------------------------------
   352                                  ; dec_cursor -- Decrement the cursor by one
   353                                  ;  IN:    Nothing
   354                                  ; OUT:    All registers preserved
   355                                  dec_cursor:
   356 0000049B 50                          push rax
   357                                  
   358 0000049C 66833C25[190D0000]-         cmp word [Screen_Cursor_Col], 0
   358 000004A4 00                 
   359 000004A5 7518                        jne dec_cursor_done
   360 000004A7 66FF0C25[170D0000]          dec word [Screen_Cursor_Row]
   361 000004AF 668B0425[150D0000]          mov ax, [Screen_Cols]
   362 000004B7 66890425[190D0000]          mov word [Screen_Cursor_Col], ax
   363                                  
   364                                   dec_cursor_done:
   365 000004BF 66FF0C25[190D0000]          dec word [Screen_Cursor_Col]
   366                                  
   367 000004C7 58                          pop rax
   368 000004C8 C3                          ret
   369                                  ; -----------------------------------------------------------------------------
   370                                  
   371                                  
   372                                  ; -----------------------------------------------------------------------------
   373                                  ; output_newline -- Reset cursor to start of next line and scroll if needed
   374                                  ;  IN:    Nothing
   375                                  ; OUT:    All registers preserved
   376                                  output_newline:
   377 000004C9 50                          push rax
   378                                  
   379 000004CA 66C70425[190D0000]-         mov word [Screen_Cursor_Col], 0    ; Reset column to 0
   379 000004D2 0000               
   380 000004D4 668B0425[130D0000]          mov ax, [Screen_Rows]    	; Grab max rows on screen
   381 000004DC 66FFC8                      dec ax    			; and subtract 1
   382 000004DF 663B0425[170D0000]          cmp ax, [Screen_Cursor_Row]    ; Is the cursor already on the bottom row?
   383 000004E7 740A                        je output_newline_scroll    ; If so, then scroll
   384 000004E9 66FF0425[170D0000]          inc word [Screen_Cursor_Row]    ; If not, increment the cursor to next row
   385 000004F1 EB05                        jmp output_newline_done
   386                                  
   387                                   output_newline_scroll:
   388 000004F3 E88F010000                  call screen_scroll
   389                                  
   390                                   output_newline_done:
   391 000004F8 58                          pop rax
   392 000004F9 C3                          ret
   393                                  ; -----------------------------------------------------------------------------
   394                                  
   395                                  
   396                                  ; -----------------------------------------------------------------------------
   397                                  ; output -- Displays text
   398                                  ;  IN:    RSI = message location (zero-terminated string)
   399                                  ; OUT:    All registers preserved
   400                                  output:
   401 000004FA 51                          push rcx
   402                                  
   403 000004FB E8DE010000                  call string_length
   404 00000500 E811010000                  call output_chars
   405                                  
   406 00000505 59                          pop rcx
   407 00000506 C3                          ret
   408                                  ; -----------------------------------------------------------------------------
   409                                  
   410                                  
   411                                  ; -----------------------------------------------------------------------------
   412                                  ; output_char -- Displays a char
   413                                  ;  IN:    AL  = char to display
   414                                  ; OUT:    All registers preserved
   415                                  output_char:
   416 00000507 57                          push rdi
   417 00000508 52                          push rdx
   418 00000509 51                          push rcx
   419 0000050A 53                          push rbx
   420 0000050B 50                          push rax
   421                                  
   422 0000050C E861000000                  call glyph
   423 00000511 E837FFFFFF                  call inc_cursor
   424                                  
   425 00000516 58                          pop rax
   426 00000517 5B                          pop rbx
   427 00000518 59                          pop rcx
   428 00000519 5A                          pop rdx
   429 0000051A 5F                          pop rdi
   430 0000051B C3                          ret
   431                                  ; -----------------------------------------------------------------------------
   432                                  
   433                                  
   434                                  ; -----------------------------------------------------------------------------
   435                                  ; pixel -- Put a pixel on the screen
   436                                  ;  IN:    EBX = Packed X & Y coordinates (YYYYXXXX)
   437                                  ;    EAX = Pixel Details (AARRGGBB)
   438                                  ; OUT:    All registers preserved
   439                                  pixel:
   440 0000051C 57                          push rdi
   441 0000051D 52                          push rdx
   442 0000051E 51                          push rcx
   443 0000051F 53                          push rbx
   444 00000520 50                          push rax
   445                                  
   446 00000521 50                          push rax    		; Save the pixel details
   447 00000522 4889D8                      mov rax, rbx
   448 00000525 C1E810                      shr eax, 16    		; Isolate Y co-ordinate
   449 00000528 31C9                        xor ecx, ecx
   450 0000052A 668B0C25[0F0D0000]          mov cx, [VideoX]
   451 00000532 F7E1                        mul ecx    			; Multiply Y by VideoX
   452 00000534 81E3FFFF0000                and ebx, 0x0000FFFF    	; Isolate X co-ordinate
   453 0000053A 01D8                        add eax, ebx    		; Add X
   454 0000053C 488B3C25[F30C0000]          mov rdi, [VideoBase]
   455                                  
   456 00000544 803C25[1B0D0000]20          cmp byte [VideoDepth], 32
   457 0000054C 7416                        je pixel_32
   458                                  
   459                                   pixel_24:
   460 0000054E B903000000                  mov ecx, 3
   461 00000553 F7E1                        mul ecx    			; Multiply by 3 as each pixel is 3 bytes
   462 00000555 4801C7                      add rdi, rax    		; Add offset to pixel video memory
   463 00000558 58                          pop rax    			; Restore pixel details
   464 00000559 AA                          stosb
   465 0000055A C1E808                      shr eax, 8
   466 0000055D AA                          stosb
   467 0000055E C1E808                      shr eax, 8
   468 00000561 AA                          stosb
   469 00000562 EB08                        jmp pixel_done
   470                                  
   471                                   pixel_32:
   472 00000564 C1E002                      shl eax, 2    		; Quickly multiply by 4
   473 00000567 4801C7                      add rdi, rax    		; Add offset to pixel video memory
   474 0000056A 58                          pop rax    			; Restore pixel details
   475 0000056B AB                          stosd
   476                                  
   477                                   pixel_done:
   478 0000056C 58                          pop rax
   479 0000056D 5B                          pop rbx
   480 0000056E 59                          pop rcx
   481 0000056F 5A                          pop rdx
   482 00000570 5F                          pop rdi
   483 00000571 C3                          ret
   484                                  ; -----------------------------------------------------------------------------
   485                                  
   486                                  
   487                                  ; -----------------------------------------------------------------------------
   488                                  ; glyph_put -- Put a glyph on the screen at the cursor location
   489                                  ;  IN:    AL  = char to display
   490                                  ; OUT:    All registers preserved
   491                                  glyph:
   492 00000572 57                          push rdi
   493 00000573 56                          push rsi
   494 00000574 52                          push rdx
   495 00000575 51                          push rcx
   496 00000576 53                          push rbx
   497 00000577 50                          push rax
   498                                  
   499 00000578 4883E820                    sub rax, 0x20
   500 0000057C 83E07F                      and eax, 0x0000007F         ; No reason to display high characters
   501                                  
   502 0000057F B90C000000                  mov ecx, 12    		; Font height
   503 00000584 F7E1                        mul ecx
   504 00000586 48BE-                       mov rsi, font_data
   504 00000588 [1E0D000000000000] 
   505 00000590 4801C6                      add rsi, rax    		; add offset to correct glyph
   506                                  
   507                                  ; Calculate pixel co-ordinates for character
   508 00000593 31DB                        xor ebx, ebx
   509 00000595 31D2                        xor edx, edx
   510 00000597 31C0                        xor eax, eax
   511 00000599 668B0425[170D0000]          mov ax, [Screen_Cursor_Row]
   512 000005A1 66B90C00                    mov cx, 12    		; Font height
   513 000005A5 66F7E1                      mul cx
   514 000005A8 6689C3                      mov bx, ax
   515 000005AB C1E310                      shl ebx, 16
   516 000005AE 31D2                        xor edx, edx
   517 000005B0 31C0                        xor eax, eax
   518 000005B2 668B0425[190D0000]          mov ax, [Screen_Cursor_Col]
   519 000005BA 66B90600                    mov cx, 6    		; Font width
   520 000005BE 66F7E1                      mul cx
   521 000005C1 6689C3                      mov bx, ax
   522                                  
   523 000005C4 31C0                        xor eax, eax
   524 000005C6 31C9                        xor ecx, ecx    		; x counter
   525 000005C8 31D2                        xor edx, edx    		; y counter
   526                                  
   527                                   glyph_nextline:
   528 000005CA AC                          lodsb    			; Load a line
   529                                  
   530                                   glyph_nextpixel:
   531 000005CB 83F906                      cmp ecx, 6    		; Font width
   532 000005CE 742D                        je glyph_bailout    	; Glyph row complete
   533 000005D0 D0C0                        rol al, 1
   534 000005D2 660FBAE000                  bt ax, 0
   535 000005D7 7210                        jc glyph_pixel
   536 000005D9 50                          push rax
   537 000005DA 8B0425[0B0D0000]            mov eax, [BG_Color]
   538 000005E1 E836FFFFFF                  call pixel
   539 000005E6 58                          pop rax
   540 000005E7 EB0E                        jmp glyph_skip
   541                                  
   542                                   glyph_pixel:
   543 000005E9 50                          push rax
   544 000005EA 8B0425[070D0000]            mov eax, [FG_Color]
   545 000005F1 E826FFFFFF                  call pixel
   546 000005F6 58                          pop rax
   547                                  
   548                                   glyph_skip:
   549 000005F7 FFC3                        inc ebx
   550 000005F9 FFC1                        inc ecx
   551 000005FB EBCE                        jmp glyph_nextpixel
   552                                  
   553                                   glyph_bailout:
   554 000005FD 31C9                        xor ecx, ecx
   555 000005FF 83EB06                      sub ebx, 6    		; column start
   556 00000602 81C300000100                add ebx, 0x00010000    	; next row
   557 00000608 FFC2                        inc edx
   558 0000060A 83FA0C                      cmp edx, 12    		; Font height
   559 0000060D 75BB                        jne glyph_nextline
   560                                  
   561                                   glyph_done:
   562 0000060F 58                          pop rax
   563 00000610 5B                          pop rbx
   564 00000611 59                          pop rcx
   565 00000612 5A                          pop rdx
   566 00000613 5E                          pop rsi
   567 00000614 5F                          pop rdi
   568 00000615 C3                          ret
   569                                  ; -----------------------------------------------------------------------------
   570                                  
   571                                  
   572                                  ; -----------------------------------------------------------------------------
   573                                  ; output_chars -- Displays text
   574                                  ;  IN:    RSI = message location (an ASCII string, not zero-terminated)
   575                                  ;    RCX = number of chars to print
   576                                  ; OUT:    All registers preserved
   577                                  output_chars:
   578 00000616 57                          push rdi
   579 00000617 56                          push rsi
   580 00000618 51                          push rcx
   581 00000619 50                          push rax
   582 0000061A 9C                          pushfq
   583                                  
   584 0000061B FC                          cld    			; Clear the direction flag.. we want to increment through the string
   585                                  
   586                                   output_chars_nextchar:
   587 0000061C E363                        jrcxz output_chars_done
   588 0000061E 48FFC9                      dec rcx
   589 00000621 AC                          lodsb    			; Get char from string and store in AL
   590 00000622 3C0D                        cmp al, 13    		; Check if there was a newline character in the string
   591 00000624 740F                        je output_chars_newline    	; If so then we print a new line
   592 00000626 3C0A                        cmp al, 10    		; Check if there was a newline character in the string
   593 00000628 740B                        je output_chars_newline    	; If so then we print a new line
   594 0000062A 3C09                        cmp al, 9
   595 0000062C 7426                        je output_chars_tab
   596 0000062E E8D4FEFFFF                  call output_char
   597 00000633 EBE7                        jmp output_chars_nextchar
   598                                  
   599                                   output_chars_newline:
   600 00000635 8A06                        mov al, [rsi]
   601 00000637 3C0A                        cmp al, 10
   602 00000639 7407                        je output_chars_newline_skip_LF
   603 0000063B E889FEFFFF                  call output_newline
   604 00000640 EBDA                        jmp output_chars_nextchar
   605                                  
   606                                   output_chars_newline_skip_LF:
   607 00000642 4885C9                      test rcx, rcx
   608 00000645 7403                        jz output_chars_newline_skip_LF_nosub
   609 00000647 48FFC9                      dec rcx
   610                                  
   611                                   output_chars_newline_skip_LF_nosub:
   612 0000064A 48FFC6                      inc rsi
   613 0000064D E877FEFFFF                  call output_newline
   614 00000652 EBC8                        jmp output_chars_nextchar
   615                                  
   616                                   output_chars_tab:
   617 00000654 51                          push rcx
   618 00000655 668B0425[190D0000]          mov ax, [Screen_Cursor_Col]    ; Grab the current cursor X value (ex 7)
   619 0000065D 6689C1                      mov cx, ax
   620 00000660 6683C008                    add ax, 8    		; Add 8 (ex 15)
   621 00000664 66C1E803                    shr ax, 3    		; Clear lowest 3 bits (ex 8)
   622 00000668 66C1E003                    shl ax, 3    		; Bug? 'xor al, 7' doesn't work...
   623 0000066C 6629C8                      sub ax, cx    		; (ex 8 - 7 = 1)
   624 0000066F 6689C1                      mov cx, ax
   625 00000672 B020                        mov al, ' '
   626                                  
   627                                   output_chars_tab_next:
   628 00000674 E88EFEFFFF                  call output_char
   629 00000679 66FFC9                      dec cx
   630 0000067C 75F6                        jnz output_chars_tab_next
   631 0000067E 59                          pop rcx
   632 0000067F EB9B                        jmp output_chars_nextchar
   633                                  
   634                                   output_chars_done:
   635 00000681 9D                          popfq
   636 00000682 58                          pop rax
   637 00000683 59                          pop rcx
   638 00000684 5E                          pop rsi
   639 00000685 5F                          pop rdi
   640 00000686 C3                          ret
   641                                  ; -----------------------------------------------------------------------------
   642                                  
   643                                  
   644                                  ; -----------------------------------------------------------------------------
   645                                  ; scroll_screen -- Scrolls the screen up by one line
   646                                  ;  IN:    Nothing
   647                                  ; OUT:    All registers preserved
   648                                  screen_scroll:
   649 00000687 56                          push rsi
   650 00000688 57                          push rdi
   651 00000689 51                          push rcx
   652 0000068A 50                          push rax
   653 0000068B 9C                          pushfq
   654                                  
   655 0000068C FC                          cld    			; Clear the direction flag as we want to increment through memory
   656 0000068D 31C9                        xor ecx, ecx
   657 0000068F 31F6                        xor esi, esi
   658 00000691 488B3C25[F30C0000]          mov rdi, [VideoBase]
   659 00000699 8B3425[030D0000]            mov esi, [Screen_Row_2]
   660 000006A0 4801FE                      add rsi, rdi
   661 000006A3 8B0C25[FF0C0000]            mov ecx, [Screen_Bytes]
   662 000006AA F3A4                        rep movsb
   663                                  
   664                                   screen_scroll_done:
   665 000006AC 9D                          popfq
   666 000006AD 58                          pop rax
   667 000006AE 59                          pop rcx
   668 000006AF 5F                          pop rdi
   669 000006B0 5E                          pop rsi
   670 000006B1 C3                          ret
   671                                  ; -----------------------------------------------------------------------------
   672                                  
   673                                  
   674                                  ; -----------------------------------------------------------------------------
   675                                  ; screen_clear -- Clear the screen
   676                                  ;  IN:    AL
   677                                  ; OUT:    All registers preserved
   678                                  screen_clear:
   679 000006B2 57                          push rdi
   680 000006B3 51                          push rcx
   681 000006B4 50                          push rax
   682 000006B5 9C                          pushfq
   683                                  
   684 000006B6 FC                          cld    			; Clear the direction flag as we want to increment through memory
   685 000006B7 31C9                        xor ecx, ecx
   686 000006B9 488B3C25[F30C0000]          mov rdi, [VideoBase]
   687 000006C1 31C0                        xor eax, eax
   688 000006C3 8A0425[0B0D0000]            mov al, [BG_Color]    	; TODO - needs to use the whole value
   689 000006CA 8B0C25[FF0C0000]            mov ecx, [Screen_Bytes]
   690 000006D1 81C1A0860100                add ecx, 100000    		; Fudge value for last line.. gross
   691 000006D7 F3AA                        rep stosb
   692                                  
   693                                   screen_clear_done:
   694 000006D9 9D                          popfq
   695 000006DA 58                          pop rax
   696 000006DB 59                          pop rcx
   697 000006DC 5F                          pop rdi
   698 000006DD C3                          ret
   699                                  ; -----------------------------------------------------------------------------
   700                                  
   701                                  
   702                                  ; -----------------------------------------------------------------------------
   703                                  ; string_length -- Return length of a string
   704                                  ;  IN:    RSI = string location
   705                                  ; OUT:    RCX = length (not including the NULL terminator)
   706                                  ;    All other registers preserved
   707                                  string_length:
   708 000006DE 57                          push rdi
   709 000006DF 50                          push rax
   710                                  
   711 000006E0 31C9                        xor ecx, ecx
   712 000006E2 31C0                        xor eax, eax
   713 000006E4 4889F7                      mov rdi, rsi
   714 000006E7 48F7D1                      not rcx
   715 000006EA FC                          cld
   716 000006EB F2AE                        repne scasb    		; compare byte at RDI to value in AL
   717 000006ED 48F7D1                      not rcx
   718 000006F0 48FFC9                      dec rcx
   719                                  
   720 000006F3 58                          pop rax
   721 000006F4 5F                          pop rdi
   722 000006F5 C3                          ret
   723                                  ; -----------------------------------------------------------------------------
   724                                  
   725                                  
   726                                  ; -----------------------------------------------------------------------------
   727                                  ; string_compare -- See if two strings match
   728                                  ;  IN:    RSI = string one
   729                                  ;    RDI = string two
   730                                  ; OUT:    Carry flag set if same
   731                                  string_compare:
   732 000006F6 56                          push rsi
   733 000006F7 57                          push rdi
   734 000006F8 53                          push rbx
   735 000006F9 50                          push rax
   736                                  
   737                                   string_compare_more:
   738 000006FA 8A06                        mov al, [rsi]    		; Store string contents
   739 000006FC 8A1F                        mov bl, [rdi]
   740 000006FE 84C0                        test al, al    		; End of first string?
   741 00000700 7412                        jz string_compare_terminated
   742 00000702 38D8                        cmp al, bl
   743 00000704 7508                        jne string_compare_not_same
   744 00000706 48FFC6                      inc rsi
   745 00000709 48FFC7                      inc rdi
   746 0000070C EBEC                        jmp string_compare_more
   747                                  
   748                                   string_compare_not_same:
   749 0000070E 58                          pop rax
   750 0000070F 5B                          pop rbx
   751 00000710 5F                          pop rdi
   752 00000711 5E                          pop rsi
   753 00000712 F8                          clc
   754 00000713 C3                          ret
   755                                  
   756                                   string_compare_terminated:
   757 00000714 84DB                        test bl, bl    		; End of second string?
   758 00000716 75F6                        jnz string_compare_not_same
   759                                  
   760 00000718 58                          pop rax
   761 00000719 5B                          pop rbx
   762 0000071A 5F                          pop rdi
   763 0000071B 5E                          pop rsi
   764 0000071C F9                          stc
   765 0000071D C3                          ret
   766                                  ; -----------------------------------------------------------------------------
   767                                  
   768                                  
   769                                  ; -----------------------------------------------------------------------------
   770                                  ; string_from_int -- Convert a binary integer into an string
   771                                  ;  IN:    RAX = binary integer
   772                                  ;    RDI = location to store string
   773                                  ; OUT:    RDI = points to end of string
   774                                  ;    All other registers preserved
   775                                  ; Min return value is 0 and max return value is 18446744073709551615 so the
   776                                  ; string needs to be able to store at least 21 characters (20 for the digits
   777                                  ; and 1 for the string terminator).
   778                                  ; Adapted from http://www.cs.usfca.edu/~cruse/cs210s09/rax2uint.s
   779                                  string_from_int:
   780 0000071E 52                          push rdx
   781 0000071F 51                          push rcx
   782 00000720 53                          push rbx
   783 00000721 50                          push rax
   784 00000722 56                          push rsi
   785                                  
   786 00000723 BB0A000000                  mov rbx, 10    				; base of the decimal system
   787 00000728 31C9                        xor ecx, ecx    				; number of digits generated
   788                                   string_from_int_next_divide:
   789 0000072A 31D2                        xor edx, edx    				; RAX extended to (RDX,RAX)
   790 0000072C 48F7F3                      div rbx    					; divide by the number-base
   791 0000072F 52                          push rdx    				; save remainder on the stack
   792 00000730 48FFC1                      inc rcx    					; and count this remainder
   793 00000733 4885C0                      test rax, rax    				; was the quotient zero?
   794 00000736 75F2                        jnz string_from_int_next_divide    		; no, do another division
   795                                  
   796                                   string_from_int_next_digit:
   797 00000738 58                          pop rax    					; else pop recent remainder
   798 00000739 0430                        add al, '0'    				; and convert to a numeral
   799 0000073B AA                          stosb    					; store to memory-buffer
   800 0000073C E2FA                        loop string_from_int_next_digit    		; again for other remainders
   801 0000073E 30C0                        xor al, al
   802 00000740 AA                          stosb    					; Store the null terminator at the end of the string
   803                                  
   804 00000741 5E                          pop rsi
   805 00000742 58                          pop rax
   806 00000743 5B                          pop rbx
   807 00000744 59                          pop rcx
   808 00000745 5A                          pop rdx
   809 00000746 C3                          ret
   810                                  
   811                                  ; -----------------------------------------------------------------------------
   812                                  
   813                                  
   814                                  ; -----------------------------------------------------------------------------
   815                                  ; string_to_int -- Convert a string into a binary integer
   816                                  ;  IN:    RSI = location of string
   817                                  ; OUT:    RAX = integer value
   818                                  ;    All other registers preserved
   819                                  ; Adapted from http://www.cs.usfca.edu/~cruse/cs210s09/uint2rax.s
   820                                  string_to_int:
   821 00000747 56                          push rsi
   822 00000748 52                          push rdx
   823 00000749 51                          push rcx
   824 0000074A 53                          push rbx
   825                                  
   826 0000074B 31C0                        xor eax, eax    		; initialize accumulator
   827 0000074D BB0A000000                  mov rbx, 10    		; decimal-system's radix
   828                                   string_to_int_next_digit:
   829 00000752 8A0E                        mov cl, [rsi]    		; fetch next character
   830 00000754 80F930                      cmp cl, '0'    		; char precedes '0'?
   831 00000757 7214                        jb string_to_int_invalid    ; yes, not a numeral
   832 00000759 80F939                      cmp cl, '9'    		; char follows '9'?
   833 0000075C 770F                        ja string_to_int_invalid    ; yes, not a numeral
   834 0000075E 48F7E3                      mul rbx    			; ten times prior sum
   835 00000761 4883E10F                    and rcx, 0x0F    		; convert char to int
   836 00000765 4801C8                      add rax, rcx    		; add to prior total
   837 00000768 48FFC6                      inc rsi    			; advance source index
   838 0000076B EBE5                        jmp string_to_int_next_digit    ; and check another char
   839                                  
   840                                   string_to_int_invalid:
   841 0000076D 5B                          pop rbx
   842 0000076E 59                          pop rcx
   843 0000076F 5A                          pop rdx
   844 00000770 5E                          pop rsi
   845 00000771 C3                          ret
   846                                  ; -----------------------------------------------------------------------------
   847                                  
   848                                  %include 'mondebug.asm'
   849                              <1> ; =============================================================================
   850                              <1> ; SimpOS -- a 64-bit OS written in Assembly for x86-64 systems
   851                              <1> ; Copyright (C) 2021 Peter Glen
   852                              <1> ; Written: Sun 24.Oct.2021
   853                              <1> ; =============================================================================
   854                              <1> 
   855                              <1> %macro TAB 0
   856                              <1>     push rsi
   857                              <1>     mov rsi, tab
   858                              <1>     call output
   859                              <1>     pop rsi
   860                              <1> %endmacro
   861                              <1> 
   862                              <1> %macro SPACE 0
   863                              <1>     push rsi
   864                              <1>     mov rsi, space
   865                              <1>     call output
   866                              <1>     pop rsi
   867                              <1> %endmacro
   868                              <1> 
   869                              <1> %macro  DOSTR 0
   870                              <1>     mov rdi, temp_string
   871                              <1>     mov rsi, rdi
   872                              <1>     call string_from_int
   873                              <1>     call output
   874                              <1> %endmacro
   875                              <1> 
   876                              <1> ; -----------------------------------------------------------------------------
   877                              <1> ; os_debug_dump_(rax|eax|ax|al) -- Dump content of RAX, EAX, AX, or AL
   878                              <1> ;  IN:	RAX = content to dump
   879                              <1> ; OUT:	Nothing, all registers preserved
   880                              <1> 
   881 00000772 90<rep Eh>          <1> align 16
   882                              <1> 
   883                              <1> os_debug_dump_rax:
   884                              <1> 
   885 00000780 48C1C008            <1> 	rol rax, 8
   886 00000784 E83F000000          <1> 	call os_debug_dump_al
   887 00000789 48C1C008            <1> 	rol rax, 8
   888 0000078D E836000000          <1> 	call os_debug_dump_al
   889 00000792 48C1C008            <1> 	rol rax, 8
   890 00000796 E82D000000          <1> 	call os_debug_dump_al
   891 0000079B 48C1C008            <1> 	rol rax, 8
   892 0000079F E824000000          <1> 	call os_debug_dump_al
   893 000007A4 48C1C020            <1> 	rol rax, 32
   894                              <1> 
   895                              <1> os_debug_dump_eax:
   896 000007A8 C1C008              <1> 	rol eax, 8
   897 000007AB E818000000          <1> 	call os_debug_dump_al
   898 000007B0 C1C008              <1> 	rol eax, 8
   899 000007B3 E810000000          <1> 	call os_debug_dump_al
   900 000007B8 C1C010              <1> 	rol eax, 16
   901                              <1> os_debug_dump_ax:
   902 000007BB 66C1C008            <1> 	rol ax, 8
   903 000007BF E804000000          <1> 	call os_debug_dump_al
   904 000007C4 66C1C008            <1> 	rol ax, 8
   905                              <1> 
   906                              <1> os_debug_dump_al:
   907 000007C8 53                  <1> 	push rbx
   908 000007C9 50                  <1> 	push rax
   909 000007CA FC                  <1>     cld
   910 000007CB 48BB-               <1> 	mov rbx, hextable
   910 000007CD [0E12000000000000]  <1>
   911 000007D5 50                  <1> 	push rax			; Save RAX since we work in 2 parts
   912 000007D6 C0E804              <1> 	shr al, 4			; Shift high 4 bits into low 4 bits
   913 000007D9 D7                  <1> 	xlatb
   914 000007DA 880425[09120000]    <1> 	mov [tchar+0], al
   915 000007E1 58                  <1> 	pop rax
   916 000007E2 240F                <1> 	and al, 0x0f			; Clear the high 4 bits
   917 000007E4 D7                  <1> 	xlatb
   918 000007E5 880425[0A120000]    <1> 	mov [tchar+1], al
   919 000007EC 56                  <1> 	push rsi
   920 000007ED 51                  <1> 	push rcx
   921 000007EE 48BE-               <1> 	mov rsi, tchar
   921 000007F0 [0912000000000000]  <1>
   922 000007F8 B902000000          <1> 	mov rcx, 2
   923 000007FD E8F8FCFFFF          <1> 	call output
   924                              <1> 
   925 00000802 48BE-               <1> 	mov rsi, space
   925 00000804 [ED0C000000000000]  <1>
   926 0000080C B901000000          <1> 	mov rcx, 1
   927 00000811 E8E4FCFFFF          <1> 	call output
   928                              <1> 
   929 00000816 59                  <1> 	pop rcx
   930 00000817 5E                  <1> 	pop rsi
   931 00000818 58                  <1> 	pop rax
   932 00000819 5B                  <1> 	pop rbx
   933 0000081A C3                  <1> 	ret
   934                              <1> ; -----------------------------------------------------------------------------
   935                              <1> 
   936                              <1> ; -----------------------------------------------------------------------------
   937                              <1> ; os_debug_dump_mem -- Dump content of memory in hex format
   938                              <1> ;  IN:	RSI = starting address of memory to dump
   939                              <1> ;	RCX = number of bytes
   940                              <1> ; OUT:	Nothing, all registers preserved
   941                              <1> 
   942                              <1> os_debug_dump_mem:
   943 0000081B 56                  <1> 	push rsi
   944 0000081C 51                  <1> 	push rcx			; Counter
   945 0000081D 52                  <1> 	push rdx			; Total number of bytes to display
   946 0000081E 50                  <1> 	push rax
   947                              <1> 
   948 0000081F 4885C9              <1> 	test rcx, rcx			; Bail out if no bytes were requested
   949 00000822 747B                <1> 	jz os_debug_dump_mem_done
   950                              <1> 
   951                              <1> 	;push rsi			; Output '0x'
   952                              <1> 	;push rcx
   953                              <1> 	;mov rsi, os_debug_dump_mem_chars
   954                              <1> 	;mov rcx, 2
   955                              <1> 	;call output
   956                              <1> 	;pop rcx
   957                              <1> 	;pop rsi
   958                              <1> 
   959 00000824 50                  <1>     push rax
   960 00000825 4889F0              <1>     mov rax, rsi			; Output the memory address
   961 00000828 56                  <1>     push rsi
   962 00000829 E852FFFFFF          <1> 	call os_debug_dump_rax
   963 0000082E E88A000000          <1> 	call os_debug_dump_mem_colon
   964 00000833 E86C000000          <1> 	call os_debug_dump_mem_newline
   965 00000838 5E                  <1>     pop rsi
   966 00000839 58                  <1>     pop rax
   967                              <1> 
   968                              <1> nextline:
   969 0000083A 56                  <1>     push rsi
   970 0000083B 48BE-               <1> 	mov rsi, space
   970 0000083D [ED0C000000000000]  <1>
   971 00000845 E8B0FCFFFF          <1> 	call output
   972 0000084A 5E                  <1> 	pop rsi
   973                              <1> 
   974 0000084B 66BA0000            <1> 	mov dx, 0
   975                              <1> nextchar:
   976 0000084F 4883F900            <1> 	cmp rcx, 0
   977 00000853 7445                <1> 	je os_debug_dump_mem_done_newline
   978                              <1> 
   979 00000855 AC                  <1> 	lodsb
   980 00000856 E86DFFFFFF          <1> 	call os_debug_dump_al
   981 0000085B 48FFC9              <1> 	dec rcx
   982 0000085E 48FFC2              <1> 	inc rdx
   983                              <1> 
   984 00000861 6683FA08            <1> 	cmp dx, 8			; End of line yet?
   985 00000865 7520                <1> 	jne nospace
   986 00000867 56                  <1>     push rsi
   987 00000868 48BE-               <1> 	mov rsi, space
   987 0000086A [ED0C000000000000]  <1>
   988 00000872 E883FCFFFF          <1> 	call output
   989 00000877 48BE-               <1>     mov rsi, space
   989 00000879 [ED0C000000000000]  <1>
   990 00000881 E874FCFFFF          <1> 	call output
   991 00000886 5E                  <1>     pop rsi
   992                              <1> 
   993                              <1> nospace:
   994 00000887 6683FA10            <1> 	cmp dx, 16			; End of line yet?
   995 0000088B 75C2                <1> 	jne nextchar
   996 0000088D E812000000          <1> 	call os_debug_dump_mem_newline
   997 00000892 4883F900            <1> 	cmp rcx, 0
   998 00000896 7407                <1> 	je os_debug_dump_mem_done
   999 00000898 EBA0                <1> 	jmp nextline
  1000                              <1> 
  1001                              <1>  os_debug_dump_mem_done_newline:
  1002 0000089A E805000000          <1> 	call os_debug_dump_mem_newline
  1003                              <1> 
  1004                              <1>  os_debug_dump_mem_done:
  1005 0000089F 58                  <1> 	pop rax
  1006 000008A0 59                  <1> 	pop rcx
  1007 000008A1 5A                  <1> 	pop rdx
  1008 000008A2 5E                  <1> 	pop rsi
  1009 000008A3 C3                  <1> 	ret
  1010                              <1> 
  1011                              <1>  os_debug_dump_mem_newline:
  1012 000008A4 56                  <1> 	push rsi			; Output newline
  1013 000008A5 51                  <1> 	push rcx
  1014 000008A6 48BE-               <1> 	mov rsi, newline
  1014 000008A8 [EF0C000000000000]  <1>
  1015 000008B0 B901000000          <1> 	mov rcx, 1
  1016 000008B5 E840FCFFFF          <1> 	call output
  1017 000008BA 59                  <1> 	pop rcx
  1018 000008BB 5E                  <1> 	pop rsi
  1019 000008BC C3                  <1> 	ret
  1020                              <1> 
  1021                              <1>  os_debug_dump_mem_colon:
  1022 000008BD 56                  <1> 	push rsi			; Output colon
  1023 000008BE 51                  <1> 	push rcx
  1024 000008BF 48BE-               <1> 	mov rsi, colon
  1024 000008C1 [1F12000000000000]  <1>
  1025 000008C9 B901000000          <1> 	mov rcx, 1
  1026 000008CE E827FCFFFF          <1> 	call output
  1027 000008D3 59                  <1> 	pop rcx
  1028 000008D4 5E                  <1> 	pop rsi
  1029 000008D5 C3                  <1> 	ret
  1030                              <1> 
  1031                              <1> ; -----------------------------------------------------------------------------
  1032                              <1> ; Funcname  -- Content description
  1033                              <1> ;
  1034                              <1> ;  IN:  RSI = starting address of memory to dump
  1035                              <1> ;       RCX = number of bytes
  1036                              <1> ;
  1037                              <1> ; OUT:	Nothing
  1038                              <1> ;
  1039                              <1> ;       All registers preserved
  1040                              <1> ;
  1041                              <1> ; Date/Time: Sun 24.Oct.2021 16:58:43
  1042                              <1> ; -----------------------------------------------------------------------------
  1043                              <1> 
  1044                              <1> show_memap:
  1045                              <1> 
  1046                              <1>     ; Output memory map
  1047 000008D6 48BE-               <1>     mov rsi, memapmsg
  1047 000008D8 [2D0C000000000000]  <1>
  1048 000008E0 E815FCFFFF          <1>     call output
  1049                              <1> 
  1050 000008E5 4831C0              <1>     xor rax, rax
  1051 000008E8 BE00600000          <1>     mov rsi, 0x6000
  1052 000008ED B919000000          <1>     mov rcx, 25
  1053 000008F2 FC                  <1>     cld
  1054                              <1> 
  1055                              <1>  again_mm:
  1056                              <1> 
  1057 000008F3 51                  <1>     push rcx
  1058                              <1> 
  1059                              <1>     ; begin mem ptr
  1060 000008F4 48AD                <1>     lodsq
  1061 000008F6 E8BB000000          <1>     call str_from_hex
  1062                              <1>     SPACE
   863 000008FB 56                  <2>  push rsi
   864 000008FC 48BE-               <2>  mov rsi, space
   864 000008FE [ED0C000000000000]  <2>
   865 00000906 E8EFFBFFFF          <2>  call output
   866 0000090B 5E                  <2>  pop rsi
  1063                              <1> 
  1064                              <1>     ; mem size
  1065 0000090C 48AD                <1>     lodsq
  1066 0000090E 4883F800            <1>     cmp rax, 0
  1067 00000912 0F8486000000        <1>     je  done_mem
  1068 00000918 E899000000          <1>     call str_from_hex
  1069                              <1>     SPACE
   863 0000091D 56                  <2>  push rsi
   864 0000091E 48BE-               <2>  mov rsi, space
   864 00000920 [ED0C000000000000]  <2>
   865 00000928 E8CDFBFFFF          <2>  call output
   866 0000092D 5E                  <2>  pop rsi
  1070                              <1> 
  1071                              <1>     ; type
  1072 0000092E AD                  <1>     lodsd
  1073 0000092F 6683F801            <1>     cmp ax, 1
  1074 00000933 7500                <1>     jne nogood
  1075                              <1> 
  1076                              <1>     ;push rsi
  1077                              <1>     ;mov rsi, colon
  1078                              <1>     ;call output
  1079                              <1>     ;pop rsi
  1080                              <1> 
  1081                              <1>  nogood:
  1082                              <1> 
  1083 00000935 E8C7000000          <1>     call str_from_hex32
  1084                              <1>     SPACE
   863 0000093A 56                  <2>  push rsi
   864 0000093B 48BE-               <2>  mov rsi, space
   864 0000093D [ED0C000000000000]  <2>
   865 00000945 E8B0FBFFFF          <2>  call output
   866 0000094A 5E                  <2>  pop rsi
  1085                              <1> 
  1086                              <1>     ; attributes
  1087 0000094B AD                  <1>     lodsd
  1088 0000094C 56                  <1>     push rsi
  1089 0000094D E8AF000000          <1>     call str_from_hex32
  1090                              <1>     SPACE
   863 00000952 56                  <2>  push rsi
   864 00000953 48BE-               <2>  mov rsi, space
   864 00000955 [ED0C000000000000]  <2>
   865 0000095D E898FBFFFF          <2>  call output
   866 00000962 5E                  <2>  pop rsi
  1091 00000963 5E                  <1>     pop rsi
  1092                              <1> 
  1093                              <1>     ; padding
  1094                              <1>     ;xor rax, rax
  1095 00000964 48AD                <1>     lodsq
  1096 00000966 56                  <1>     push rsi
  1097 00000967 E84A000000          <1>     call str_from_hex
  1098                              <1>     SPACE
   863 0000096C 56                  <2>  push rsi
   864 0000096D 48BE-               <2>  mov rsi, space
   864 0000096F [ED0C000000000000]  <2>
   865 00000977 E87EFBFFFF          <2>  call output
   866 0000097C 5E                  <2>  pop rsi
  1099 0000097D 5E                  <1>     pop rsi
  1100                              <1> 
  1101 0000097E 56                  <1>     push rsi
  1102 0000097F 48BE-               <1>     mov rsi, newline
  1102 00000981 [EF0C000000000000]  <1>
  1103 00000989 E86CFBFFFF          <1>     call output
  1104 0000098E 5E                  <1>     pop rsi
  1105                              <1> 
  1106 0000098F 59                  <1>     pop  rcx
  1107 00000990 48FFC9              <1>     dec  rcx
  1108 00000993 4883F900            <1>     cmp  rcx, 0
  1109 00000997 0F8556FFFFFF        <1>     jne  again_mm
  1110 0000099D C3                  <1>     ret
  1111                              <1> 
  1112                              <1>  done_mem:
  1113                              <1> 
  1114 0000099E 56                  <1>     push rsi
  1115 0000099F 48BE-               <1>     mov rsi, newline
  1115 000009A1 [EF0C000000000000]  <1>
  1116 000009A9 E84CFBFFFF          <1>     call output
  1117 000009AE E847FBFFFF          <1>     call output
  1118 000009B3 5E                  <1>     pop rsi
  1119                              <1> 
  1120                              <1> 
  1121 000009B4 59                  <1>     pop rcx
  1122 000009B5 C3                  <1>     ret
  1123                              <1> 
  1124                              <1> ; -----------------------------------------------------------------------------
  1125                              <1> ; str_from_hex  -- Content description
  1126                              <1> ;
  1127                              <1> ;  IN:  RAX = number to put yo screen
  1128                              <1> ;
  1129                              <1> ; OUT:	Nothing
  1130                              <1> ;
  1131                              <1> ;       All registers preserved
  1132                              <1> ;
  1133                              <1> ; Date/Time: Sun 24.Oct.2021 17:35:17
  1134                              <1> ; -----------------------------------------------------------------------------
  1135                              <1> 
  1136                              <1> str_from_hex:
  1137                              <1> 
  1138 000009B6 50                  <1> 	push rax
  1139 000009B7 48C1C008            <1>     rol rax, 8
  1140 000009BB E879000000          <1> 	call disp_hex
  1141 000009C0 48C1C008            <1> 	rol rax, 8
  1142 000009C4 E870000000          <1> 	call disp_hex
  1143 000009C9 48C1C008            <1> 	rol rax, 8
  1144 000009CD E867000000          <1> 	call disp_hex
  1145 000009D2 48C1C008            <1> 	rol rax, 8
  1146 000009D6 E85E000000          <1> 	call disp_hex
  1147 000009DB 48C1C008            <1> 	rol rax, 8
  1148 000009DF E855000000          <1> 	call disp_hex
  1149 000009E4 48C1C008            <1> 	rol rax, 8
  1150 000009E8 E84C000000          <1> 	call disp_hex
  1151 000009ED 48C1C008            <1> 	rol rax, 8
  1152 000009F1 E843000000          <1> 	call disp_hex
  1153 000009F6 48C1C008            <1> 	rol rax, 8
  1154 000009FA E83A000000          <1> 	call disp_hex
  1155 000009FF 58                  <1>     pop rax
  1156 00000A00 C3                  <1>     ret
  1157                              <1> 
  1158                              <1> str_from_hex32:
  1159                              <1> 
  1160 00000A01 50                  <1> 	push rax
  1161 00000A02 C1C008              <1>     rol eax, 8
  1162 00000A05 E82F000000          <1> 	call disp_hex
  1163 00000A0A C1C008              <1> 	rol eax, 8
  1164 00000A0D E827000000          <1> 	call disp_hex
  1165 00000A12 C1C008              <1> 	rol eax, 8
  1166 00000A15 E81F000000          <1> 	call disp_hex
  1167 00000A1A C1C008              <1> 	rol eax, 8
  1168 00000A1D E817000000          <1> 	call disp_hex
  1169 00000A22 58                  <1>     pop rax
  1170 00000A23 C3                  <1>     ret
  1171                              <1> 
  1172                              <1> str_from_hex16:
  1173                              <1> 
  1174 00000A24 50                  <1> 	push rax
  1175 00000A25 66C1C008            <1>     rol ax, 8
  1176 00000A29 E80B000000          <1> 	call disp_hex
  1177 00000A2E 66C1C008            <1> 	rol ax, 8
  1178 00000A32 E802000000          <1> 	call disp_hex
  1179 00000A37 58                  <1>     pop rax
  1180 00000A38 C3                  <1>     ret
  1181                              <1> 
  1182                              <1> disp_hex:               ; Hex in AL
  1183                              <1> 
  1184 00000A39 53                  <1> 	push rbx
  1185 00000A3A 50                  <1> 	push rax
  1186 00000A3B FC                  <1>     cld
  1187 00000A3C 48BB-               <1> 	mov rbx, hextable
  1187 00000A3E [0E12000000000000]  <1>
  1188 00000A46 50                  <1> 	push rax			; Save RAX since we work in 2 parts
  1189 00000A47 C0E804              <1> 	shr al, 4			; Shift high 4 bits into low 4 bits
  1190 00000A4A D7                  <1> 	xlatb
  1191 00000A4B 880425[09120000]    <1> 	mov [tchar+0], al
  1192 00000A52 58                  <1> 	pop rax
  1193 00000A53 240F                <1> 	and al, 0x0f			; Clear the high 4 bits
  1194 00000A55 D7                  <1> 	xlatb
  1195 00000A56 880425[0A120000]    <1> 	mov [tchar+1], al
  1196 00000A5D 56                  <1> 	push rsi
  1197 00000A5E 51                  <1> 	push rcx
  1198 00000A5F 48BE-               <1> 	mov rsi, tchar
  1198 00000A61 [0912000000000000]  <1>
  1199 00000A69 B902000000          <1> 	mov rcx, 2
  1200 00000A6E E887FAFFFF          <1> 	call output
  1201                              <1> 
  1202 00000A73 59                  <1> 	pop rcx
  1203 00000A74 5E                  <1> 	pop rsi
  1204 00000A75 58                  <1> 	pop rax
  1205 00000A76 5B                  <1> 	pop rbx
  1206 00000A77 C3                  <1> 	ret
  1207                              <1> 
  1208                              <1> ; EOF
   849                                  %include 'mondata.asm'
   850                              <1> ; =============================================================================
   851                              <1> ; SimpOS -- a 64-bit OS written in Assembly for x86-64 systems
   852                              <1> ; Copyright (C) 2021 Peter Glen
   853                              <1> ; Written: Sun 24.Oct.2021
   854                              <1> ; =============================================================================
   855                              <1> 
   856                              <1> ; Strings
   857                              <1> 
   858 00000A78 3E2000              <1> prompt:    		    db '> ', 0
   859 00000A7B 312E300D00          <1> message_ver:    	db '1.0', 13, 0
   860 00000A80 456E7465722066696C- <1> message_load:    	db 'Enter file number: ', 0
   860 00000A89 65206E756D6265723A- <1>
   860 00000A92 2000                <1>
   861 00000A94 556E6B6E6F776E2063- <1> message_unknown:    db 'Unknown command', 13, 0
   861 00000A9D 6F6D6D616E640D00    <1>
   862 00000AA5 417661696C61626C65- <1> message_help:    	db 'Available commands:', 13
   862 00000AAE 20636F6D6D616E6473- <1>
   862 00000AB7 3A0D                <1>
   863 00000AB9 2064697220202D2053- <1>                     db ' dir  - Show programs currently on disk', 13
   863 00000AC2 686F772070726F6772- <1>
   863 00000ACB 616D73206375727265- <1>
   863 00000AD4 6E746C79206F6E2064- <1>
   863 00000ADD 69736B0D            <1>
   864 00000AE1 206C6F6164202D204C- <1>                     db ' load - Load a program to memory (you will be prompted for the program number)', 13
   864 00000AEA 6F616420612070726F- <1>
   864 00000AF3 6772616D20746F206D- <1>
   864 00000AFC 656D6F72792028796F- <1>
   864 00000B05 752077696C6C206265- <1>
   864 00000B0E 2070726F6D70746564- <1>
   864 00000B17 20666F722074686520- <1>
   864 00000B20 70726F6772616D206E- <1>
   864 00000B29 756D626572290D      <1>
   865 00000B30 2065786563202D2052- <1>                     db ' exec - Run the program currently in memory', 13
   865 00000B39 756E20746865207072- <1>
   865 00000B42 6F6772616D20637572- <1>
   865 00000B4B 72656E746C7920696E- <1>
   865 00000B54 206D656D6F72790D    <1>
   866 00000B5C 2076657220202D2053- <1>                     db ' ver  - Show the system version', 13, 0
   866 00000B65 686F77207468652073- <1>
   866 00000B6E 797374656D20766572- <1>
   866 00000B77 73696F6E0D00        <1>
   867                              <1> 
   868 00000B7D 6578656300          <1> command_exec:    	db 'exec', 0
   869 00000B82 64697200            <1> command_dir:    	db 'dir', 0
   870 00000B86 76657200            <1> command_ver:    	db 'ver', 0
   871 00000B8A 6C6F616400          <1> command_load:    	db 'load', 0
   872 00000B8F 68656C7000          <1> command_help:    	db 'help', 0
   873                              <1> 
   874                              <1> banner:
   875 00000B94 202D2D2D2D2D2D2D2D- <1>                 db ' -------------------------------------------------', 13
   875 00000B9D 2D2D2D2D2D2D2D2D2D- <1>
   875 00000BA6 2D2D2D2D2D2D2D2D2D- <1>
   875 00000BAF 2D2D2D2D2D2D2D2D2D- <1>
   875 00000BB8 2D2D2D2D2D2D2D2D2D- <1>
   875 00000BC1 2D2D2D2D2D0D        <1>
   876 00000BC7 202053696D704F5320- <1>                 db '  SimpOS Written by Peter Glen, using BareMetal',    13
   876 00000BD0 5772697474656E2062- <1>
   876 00000BD9 792050657465722047- <1>
   876 00000BE2 6C656E2C207573696E- <1>
   876 00000BEB 6720426172654D6574- <1>
   876 00000BF4 616C0D              <1>
   877 00000BF7 202D2D2D2D2D2D2D2D- <1>                 db ' -------------------------------------------------', 13, 13, 13, 0
   877 00000C00 2D2D2D2D2D2D2D2D2D- <1>
   877 00000C09 2D2D2D2D2D2D2D2D2D- <1>
   877 00000C12 2D2D2D2D2D2D2D2D2D- <1>
   877 00000C1B 2D2D2D2D2D2D2D2D2D- <1>
   877 00000C24 2D2D2D2D2D0D0D0D00  <1>
   878                              <1> 
   879 00000C2D 4D656D6F7279204D61- <1> memapmsg:       db 'Memory Map: ', 13,
   879 00000C36 703A200D            <1>
   880 00000C3A 202020205374617274- <1>                 db '    Start            Length        Flag     ACPI        Filler   ', 13, 0
   880 00000C43 202020202020202020- <1>
   880 00000C4C 2020204C656E677468- <1>
   880 00000C55 202020202020202046- <1>
   880 00000C5E 6C6167202020202041- <1>
   880 00000C67 435049202020202020- <1>
   880 00000C70 202046696C6C657220- <1>
   880 00000C79 20200D00            <1>
   881                              <1> 
   882 00000C7D 20206370753A2000    <1> cpumsg:    		db '  cpu: ', 0
   883 00000C85 20206D656D3A2000    <1> memmsg:    		db '  mem: ', 0
   884 00000C8D 20206E65743A2000    <1> networkmsg:    	db '  net: ', 0
   885 00000C95 20206864643A2000    <1> diskmsg:    	db '  hdd: ', 0
   886                              <1> 
   887 00000C9D 204D694200          <1> mibmsg:    		db ' MiB', 0
   888 00000CA2 204D487A00          <1> mhzmsg:    		db ' MHz', 0
   889 00000CA7 20782000            <1> coresmsg:    	db ' x ', 0
   890 00000CAB 4E2F4100            <1> namsg:    		db 'N/A', 0
   891 00000CAF 2000                <1> closebracketmsg:    db ' ', 0
   892 00000CB1 23202020202020204E- <1> dirmsg:    		db '#       Name            Size', 13, '-----------------------------', 13, 0
   892 00000CBA 616D65202020202020- <1>
   892 00000CC3 20202020202053697A- <1>
   892 00000CCC 650D2D2D2D2D2D2D2D- <1>
   892 00000CD5 2D2D2D2D2D2D2D2D2D- <1>
   892 00000CDE 2D2D2D2D2D2D2D2D2D- <1>
   892 00000CE7 2D2D2D2D0D00        <1>
   893                              <1> 
   894 00000CED 2000                <1> space:    		db ' ', 0
   895 00000CEF 0D00                <1> newline:    	db 13, 0
   896 00000CF1 0900                <1> tab:    		db 9, 0
   897                              <1> 
   898                              <1> ; Variables
   899                              <1> 
   900 00000CF3 0000000000000000    <1> VideoBase:    	     dq 0
   901 00000CFB 00000000            <1> Screen_Pixels:       dd 0
   902 00000CFF 00000000            <1> Screen_Bytes:    	 dd 0
   903 00000D03 00000000            <1> Screen_Row_2:    	 dd 0
   904 00000D07 00000000            <1> FG_Color:    	     dd 0
   905 00000D0B 00000000            <1> BG_Color:    	     dd 0
   906 00000D0F 0000                <1> VideoX:    		     dw 0
   907 00000D11 0000                <1> VideoY:    		     dw 0
   908 00000D13 0000                <1> Screen_Rows:         dw 0
   909 00000D15 0000                <1> Screen_Cols:    	 dw 0
   910 00000D17 0000                <1> Screen_Cursor_Row:   dw 0
   911 00000D19 0000                <1> Screen_Cursor_Col:   dw 0
   912 00000D1B 00                  <1> VideoDepth:    	     db 0
   913                              <1> 
   914                              <1> %include 'font.inc'
   915                              <2> ; BareMetal Monitor Default Font
   916                              <2> ; Fonts are defined in HxW (Pixel height x Pixel width)
   917                              <2> ; 12x6 padded to 12x8
   918                              <2> 
   919 00000D1C 0C                  <2> font_height: db 12
   920 00000D1D 06                  <2> font_width: db 6
   921                              <2> 
   922                              <2> font_data:
   923                              <2> 
   924                              <2> ; Space
   925 00000D1E 00                  <2> db 00000000b
   926 00000D1F 00                  <2> db 00000000b
   927 00000D20 00                  <2> db 00000000b
   928 00000D21 00                  <2> db 00000000b
   929 00000D22 00                  <2> db 00000000b
   930 00000D23 00                  <2> db 00000000b
   931 00000D24 00                  <2> db 00000000b
   932 00000D25 00                  <2> db 00000000b
   933 00000D26 00                  <2> db 00000000b
   934 00000D27 00                  <2> db 00000000b
   935 00000D28 00                  <2> db 00000000b
   936 00000D29 00                  <2> db 00000000b
   937                              <2> 
   938                              <2> ; !
   939 00000D2A 00                  <2> db 00000000b
   940 00000D2B 00                  <2> db 00000000b
   941 00000D2C 00                  <2> db 00000000b
   942 00000D2D 20                  <2> db 00100000b
   943 00000D2E 20                  <2> db 00100000b
   944 00000D2F 20                  <2> db 00100000b
   945 00000D30 20                  <2> db 00100000b
   946 00000D31 20                  <2> db 00100000b
   947 00000D32 00                  <2> db 00000000b
   948 00000D33 20                  <2> db 00100000b
   949 00000D34 00                  <2> db 00000000b
   950 00000D35 00                  <2> db 00000000b
   951                              <2> 
   952                              <2> ; "
   953 00000D36 00                  <2> db 00000000b
   954 00000D37 00                  <2> db 00000000b
   955 00000D38 00                  <2> db 00000000b
   956 00000D39 50                  <2> db 01010000b
   957 00000D3A 50                  <2> db 01010000b
   958 00000D3B 00                  <2> db 00000000b
   959 00000D3C 00                  <2> db 00000000b
   960 00000D3D 00                  <2> db 00000000b
   961 00000D3E 00                  <2> db 00000000b
   962 00000D3F 00                  <2> db 00000000b
   963 00000D40 00                  <2> db 00000000b
   964 00000D41 00                  <2> db 00000000b
   965                              <2> 
   966                              <2> ; #
   967 00000D42 00                  <2> db 00000000b
   968 00000D43 00                  <2> db 00000000b
   969 00000D44 00                  <2> db 00000000b
   970 00000D45 00                  <2> db 00000000b
   971 00000D46 50                  <2> db 01010000b
   972 00000D47 F8                  <2> db 11111000b
   973 00000D48 50                  <2> db 01010000b
   974 00000D49 F8                  <2> db 11111000b
   975 00000D4A 50                  <2> db 01010000b
   976 00000D4B 00                  <2> db 00000000b
   977 00000D4C 00                  <2> db 00000000b
   978 00000D4D 00                  <2> db 00000000b
   979                              <2> 
   980                              <2> ; $
   981 00000D4E 00                  <2> db 00000000b
   982 00000D4F 00                  <2> db 00000000b
   983 00000D50 00                  <2> db 00000000b
   984 00000D51 70                  <2> db 01110000b
   985 00000D52 A8                  <2> db 10101000b
   986 00000D53 A0                  <2> db 10100000b
   987 00000D54 70                  <2> db 01110000b
   988 00000D55 28                  <2> db 00101000b
   989 00000D56 A8                  <2> db 10101000b
   990 00000D57 70                  <2> db 01110000b
   991 00000D58 00                  <2> db 00000000b
   992 00000D59 00                  <2> db 00000000b
   993                              <2> 
   994                              <2> ; %
   995 00000D5A 00                  <2> db 00000000b
   996 00000D5B 00                  <2> db 00000000b
   997 00000D5C 00                  <2> db 00000000b
   998 00000D5D 00                  <2> db 00000000b
   999 00000D5E 88                  <2> db 10001000b
  1000 00000D5F 10                  <2> db 00010000b
  1001 00000D60 20                  <2> db 00100000b
  1002 00000D61 40                  <2> db 01000000b
  1003 00000D62 88                  <2> db 10001000b
  1004 00000D63 00                  <2> db 00000000b
  1005 00000D64 00                  <2> db 00000000b
  1006 00000D65 00                  <2> db 00000000b
  1007                              <2> 
  1008                              <2> ; &
  1009 00000D66 00                  <2> db 00000000b
  1010 00000D67 00                  <2> db 00000000b
  1011 00000D68 00                  <2> db 00000000b
  1012 00000D69 60                  <2> db 01100000b
  1013 00000D6A 90                  <2> db 10010000b
  1014 00000D6B 60                  <2> db 01100000b
  1015 00000D6C A8                  <2> db 10101000b
  1016 00000D6D 90                  <2> db 10010000b
  1017 00000D6E 90                  <2> db 10010000b
  1018 00000D6F 68                  <2> db 01101000b
  1019 00000D70 00                  <2> db 00000000b
  1020 00000D71 00                  <2> db 00000000b
  1021                              <2> 
  1022                              <2> ; '
  1023 00000D72 00                  <2> db 00000000b
  1024 00000D73 00                  <2> db 00000000b
  1025 00000D74 00                  <2> db 00000000b
  1026 00000D75 20                  <2> db 00100000b
  1027 00000D76 20                  <2> db 00100000b
  1028 00000D77 00                  <2> db 00000000b
  1029 00000D78 00                  <2> db 00000000b
  1030 00000D79 00                  <2> db 00000000b
  1031 00000D7A 00                  <2> db 00000000b
  1032 00000D7B 00                  <2> db 00000000b
  1033 00000D7C 00                  <2> db 00000000b
  1034 00000D7D 00                  <2> db 00000000b
  1035                              <2> 
  1036                              <2> ; (
  1037 00000D7E 00                  <2> db 00000000b
  1038 00000D7F 00                  <2> db 00000000b
  1039 00000D80 00                  <2> db 00000000b
  1040 00000D81 10                  <2> db 00010000b
  1041 00000D82 20                  <2> db 00100000b
  1042 00000D83 40                  <2> db 01000000b
  1043 00000D84 40                  <2> db 01000000b
  1044 00000D85 40                  <2> db 01000000b
  1045 00000D86 20                  <2> db 00100000b
  1046 00000D87 10                  <2> db 00010000b
  1047 00000D88 00                  <2> db 00000000b
  1048 00000D89 00                  <2> db 00000000b
  1049                              <2> 
  1050                              <2> ; )
  1051 00000D8A 00                  <2> db 00000000b
  1052 00000D8B 00                  <2> db 00000000b
  1053 00000D8C 00                  <2> db 00000000b
  1054 00000D8D 40                  <2> db 01000000b
  1055 00000D8E 20                  <2> db 00100000b
  1056 00000D8F 10                  <2> db 00010000b
  1057 00000D90 10                  <2> db 00010000b
  1058 00000D91 10                  <2> db 00010000b
  1059 00000D92 20                  <2> db 00100000b
  1060 00000D93 40                  <2> db 01000000b
  1061 00000D94 00                  <2> db 00000000b
  1062 00000D95 00                  <2> db 00000000b
  1063                              <2> 
  1064                              <2> ; *
  1065 00000D96 00                  <2> db 00000000b
  1066 00000D97 00                  <2> db 00000000b
  1067 00000D98 00                  <2> db 00000000b
  1068 00000D99 00                  <2> db 00000000b
  1069 00000D9A A8                  <2> db 10101000b
  1070 00000D9B 70                  <2> db 01110000b
  1071 00000D9C F8                  <2> db 11111000b
  1072 00000D9D 70                  <2> db 01110000b
  1073 00000D9E A8                  <2> db 10101000b
  1074 00000D9F 00                  <2> db 00000000b
  1075 00000DA0 00                  <2> db 00000000b
  1076 00000DA1 00                  <2> db 00000000b
  1077                              <2> 
  1078                              <2> ; +
  1079 00000DA2 00                  <2> db 00000000b
  1080 00000DA3 00                  <2> db 00000000b
  1081 00000DA4 00                  <2> db 00000000b
  1082 00000DA5 00                  <2> db 00000000b
  1083 00000DA6 20                  <2> db 00100000b
  1084 00000DA7 20                  <2> db 00100000b
  1085 00000DA8 F8                  <2> db 11111000b
  1086 00000DA9 20                  <2> db 00100000b
  1087 00000DAA 20                  <2> db 00100000b
  1088 00000DAB 00                  <2> db 00000000b
  1089 00000DAC 00                  <2> db 00000000b
  1090 00000DAD 00                  <2> db 00000000b
  1091                              <2> 
  1092                              <2> ; ,
  1093 00000DAE 00                  <2> db 00000000b
  1094 00000DAF 00                  <2> db 00000000b
  1095 00000DB0 00                  <2> db 00000000b
  1096 00000DB1 00                  <2> db 00000000b
  1097 00000DB2 00                  <2> db 00000000b
  1098 00000DB3 00                  <2> db 00000000b
  1099 00000DB4 00                  <2> db 00000000b
  1100 00000DB5 40                  <2> db 01000000b
  1101 00000DB6 40                  <2> db 01000000b
  1102 00000DB7 80                  <2> db 10000000b
  1103 00000DB8 00                  <2> db 00000000b
  1104 00000DB9 00                  <2> db 00000000b
  1105                              <2> 
  1106                              <2> ; -
  1107 00000DBA 00                  <2> db 00000000b
  1108 00000DBB 00                  <2> db 00000000b
  1109 00000DBC 00                  <2> db 00000000b
  1110 00000DBD 00                  <2> db 00000000b
  1111 00000DBE 00                  <2> db 00000000b
  1112 00000DBF 00                  <2> db 00000000b
  1113 00000DC0 F8                  <2> db 11111000b
  1114 00000DC1 00                  <2> db 00000000b
  1115 00000DC2 00                  <2> db 00000000b
  1116 00000DC3 00                  <2> db 00000000b
  1117 00000DC4 00                  <2> db 00000000b
  1118 00000DC5 00                  <2> db 00000000b
  1119                              <2> 
  1120                              <2> ; .
  1121 00000DC6 00                  <2> db 00000000b
  1122 00000DC7 00                  <2> db 00000000b
  1123 00000DC8 00                  <2> db 00000000b
  1124 00000DC9 00                  <2> db 00000000b
  1125 00000DCA 00                  <2> db 00000000b
  1126 00000DCB 00                  <2> db 00000000b
  1127 00000DCC 00                  <2> db 00000000b
  1128 00000DCD 00                  <2> db 00000000b
  1129 00000DCE 00                  <2> db 00000000b
  1130 00000DCF 20                  <2> db 00100000b
  1131 00000DD0 00                  <2> db 00000000b
  1132 00000DD1 00                  <2> db 00000000b
  1133                              <2> 
  1134                              <2> ; /
  1135 00000DD2 00                  <2> db 00000000b
  1136 00000DD3 00                  <2> db 00000000b
  1137 00000DD4 00                  <2> db 00000000b
  1138 00000DD5 00                  <2> db 00000000b
  1139 00000DD6 08                  <2> db 00001000b
  1140 00000DD7 10                  <2> db 00010000b
  1141 00000DD8 20                  <2> db 00100000b
  1142 00000DD9 40                  <2> db 01000000b
  1143 00000DDA 80                  <2> db 10000000b
  1144 00000DDB 00                  <2> db 00000000b
  1145 00000DDC 00                  <2> db 00000000b
  1146 00000DDD 00                  <2> db 00000000b
  1147                              <2> 
  1148                              <2> ; 0
  1149 00000DDE 00                  <2> db 00000000b
  1150 00000DDF 00                  <2> db 00000000b
  1151 00000DE0 00                  <2> db 00000000b
  1152 00000DE1 70                  <2> db 01110000b
  1153 00000DE2 88                  <2> db 10001000b
  1154 00000DE3 98                  <2> db 10011000b
  1155 00000DE4 A8                  <2> db 10101000b
  1156 00000DE5 C8                  <2> db 11001000b
  1157 00000DE6 88                  <2> db 10001000b
  1158 00000DE7 70                  <2> db 01110000b
  1159 00000DE8 00                  <2> db 00000000b
  1160 00000DE9 00                  <2> db 00000000b
  1161                              <2> 
  1162                              <2> ; 1
  1163 00000DEA 00                  <2> db 00000000b
  1164 00000DEB 00                  <2> db 00000000b
  1165 00000DEC 00                  <2> db 00000000b
  1166 00000DED 20                  <2> db 00100000b
  1167 00000DEE 60                  <2> db 01100000b
  1168 00000DEF 20                  <2> db 00100000b
  1169 00000DF0 20                  <2> db 00100000b
  1170 00000DF1 20                  <2> db 00100000b
  1171 00000DF2 20                  <2> db 00100000b
  1172 00000DF3 70                  <2> db 01110000b
  1173 00000DF4 00                  <2> db 00000000b
  1174 00000DF5 00                  <2> db 00000000b
  1175                              <2> 
  1176                              <2> ; 2
  1177 00000DF6 00                  <2> db 00000000b
  1178 00000DF7 00                  <2> db 00000000b
  1179 00000DF8 00                  <2> db 00000000b
  1180 00000DF9 70                  <2> db 01110000b
  1181 00000DFA 88                  <2> db 10001000b
  1182 00000DFB 08                  <2> db 00001000b
  1183 00000DFC 10                  <2> db 00010000b
  1184 00000DFD 20                  <2> db 00100000b
  1185 00000DFE 40                  <2> db 01000000b
  1186 00000DFF F8                  <2> db 11111000b
  1187 00000E00 00                  <2> db 00000000b
  1188 00000E01 00                  <2> db 00000000b
  1189                              <2> 
  1190                              <2> ; 3
  1191 00000E02 00                  <2> db 00000000b
  1192 00000E03 00                  <2> db 00000000b
  1193 00000E04 00                  <2> db 00000000b
  1194 00000E05 70                  <2> db 01110000b
  1195 00000E06 88                  <2> db 10001000b
  1196 00000E07 08                  <2> db 00001000b
  1197 00000E08 30                  <2> db 00110000b
  1198 00000E09 08                  <2> db 00001000b
  1199 00000E0A 88                  <2> db 10001000b
  1200 00000E0B 70                  <2> db 01110000b
  1201 00000E0C 00                  <2> db 00000000b
  1202 00000E0D 00                  <2> db 00000000b
  1203                              <2> 
  1204                              <2> ; 4
  1205 00000E0E 00                  <2> db 00000000b
  1206 00000E0F 00                  <2> db 00000000b
  1207 00000E10 00                  <2> db 00000000b
  1208 00000E11 10                  <2> db 00010000b
  1209 00000E12 30                  <2> db 00110000b
  1210 00000E13 50                  <2> db 01010000b
  1211 00000E14 90                  <2> db 10010000b
  1212 00000E15 F8                  <2> db 11111000b
  1213 00000E16 10                  <2> db 00010000b
  1214 00000E17 10                  <2> db 00010000b
  1215 00000E18 00                  <2> db 00000000b
  1216 00000E19 00                  <2> db 00000000b
  1217                              <2> 
  1218                              <2> ; 5
  1219 00000E1A 00                  <2> db 00000000b
  1220 00000E1B 00                  <2> db 00000000b
  1221 00000E1C 00                  <2> db 00000000b
  1222 00000E1D F8                  <2> db 11111000b
  1223 00000E1E 80                  <2> db 10000000b
  1224 00000E1F F0                  <2> db 11110000b
  1225 00000E20 08                  <2> db 00001000b
  1226 00000E21 08                  <2> db 00001000b
  1227 00000E22 88                  <2> db 10001000b
  1228 00000E23 70                  <2> db 01110000b
  1229 00000E24 00                  <2> db 00000000b
  1230 00000E25 00                  <2> db 00000000b
  1231                              <2> 
  1232                              <2> ; 6
  1233 00000E26 00                  <2> db 00000000b
  1234 00000E27 00                  <2> db 00000000b
  1235 00000E28 00                  <2> db 00000000b
  1236 00000E29 70                  <2> db 01110000b
  1237 00000E2A 88                  <2> db 10001000b
  1238 00000E2B 80                  <2> db 10000000b
  1239 00000E2C F0                  <2> db 11110000b
  1240 00000E2D 88                  <2> db 10001000b
  1241 00000E2E 88                  <2> db 10001000b
  1242 00000E2F 70                  <2> db 01110000b
  1243 00000E30 00                  <2> db 00000000b
  1244 00000E31 00                  <2> db 00000000b
  1245                              <2> 
  1246                              <2> ; 7
  1247 00000E32 00                  <2> db 00000000b
  1248 00000E33 00                  <2> db 00000000b
  1249 00000E34 00                  <2> db 00000000b
  1250 00000E35 F8                  <2> db 11111000b
  1251 00000E36 08                  <2> db 00001000b
  1252 00000E37 10                  <2> db 00010000b
  1253 00000E38 20                  <2> db 00100000b
  1254 00000E39 20                  <2> db 00100000b
  1255 00000E3A 20                  <2> db 00100000b
  1256 00000E3B 20                  <2> db 00100000b
  1257 00000E3C 00                  <2> db 00000000b
  1258 00000E3D 00                  <2> db 00000000b
  1259                              <2> 
  1260                              <2> ; 8
  1261 00000E3E 00                  <2> db 00000000b
  1262 00000E3F 00                  <2> db 00000000b
  1263 00000E40 00                  <2> db 00000000b
  1264 00000E41 70                  <2> db 01110000b
  1265 00000E42 88                  <2> db 10001000b
  1266 00000E43 88                  <2> db 10001000b
  1267 00000E44 70                  <2> db 01110000b
  1268 00000E45 88                  <2> db 10001000b
  1269 00000E46 88                  <2> db 10001000b
  1270 00000E47 70                  <2> db 01110000b
  1271 00000E48 00                  <2> db 00000000b
  1272 00000E49 00                  <2> db 00000000b
  1273                              <2> 
  1274                              <2> ; 9
  1275 00000E4A 00                  <2> db 00000000b
  1276 00000E4B 00                  <2> db 00000000b
  1277 00000E4C 00                  <2> db 00000000b
  1278 00000E4D 70                  <2> db 01110000b
  1279 00000E4E 88                  <2> db 10001000b
  1280 00000E4F 88                  <2> db 10001000b
  1281 00000E50 78                  <2> db 01111000b
  1282 00000E51 08                  <2> db 00001000b
  1283 00000E52 88                  <2> db 10001000b
  1284 00000E53 70                  <2> db 01110000b
  1285 00000E54 00                  <2> db 00000000b
  1286 00000E55 00                  <2> db 00000000b
  1287                              <2> 
  1288                              <2> ; :
  1289 00000E56 00                  <2> db 00000000b
  1290 00000E57 00                  <2> db 00000000b
  1291 00000E58 00                  <2> db 00000000b
  1292 00000E59 00                  <2> db 00000000b
  1293 00000E5A 00                  <2> db 00000000b
  1294 00000E5B 20                  <2> db 00100000b
  1295 00000E5C 00                  <2> db 00000000b
  1296 00000E5D 20                  <2> db 00100000b
  1297 00000E5E 00                  <2> db 00000000b
  1298 00000E5F 00                  <2> db 00000000b
  1299 00000E60 00                  <2> db 00000000b
  1300 00000E61 00                  <2> db 00000000b
  1301                              <2> 
  1302                              <2> ; ;
  1303 00000E62 00                  <2> db 00000000b
  1304 00000E63 00                  <2> db 00000000b
  1305 00000E64 00                  <2> db 00000000b
  1306 00000E65 00                  <2> db 00000000b
  1307 00000E66 00                  <2> db 00000000b
  1308 00000E67 20                  <2> db 00100000b
  1309 00000E68 00                  <2> db 00000000b
  1310 00000E69 20                  <2> db 00100000b
  1311 00000E6A 20                  <2> db 00100000b
  1312 00000E6B 40                  <2> db 01000000b
  1313 00000E6C 00                  <2> db 00000000b
  1314 00000E6D 00                  <2> db 00000000b
  1315                              <2> 
  1316                              <2> ; <
  1317 00000E6E 00                  <2> db 00000000b
  1318 00000E6F 00                  <2> db 00000000b
  1319 00000E70 00                  <2> db 00000000b
  1320 00000E71 10                  <2> db 00010000b
  1321 00000E72 20                  <2> db 00100000b
  1322 00000E73 40                  <2> db 01000000b
  1323 00000E74 80                  <2> db 10000000b
  1324 00000E75 40                  <2> db 01000000b
  1325 00000E76 20                  <2> db 00100000b
  1326 00000E77 10                  <2> db 00010000b
  1327 00000E78 00                  <2> db 00000000b
  1328 00000E79 00                  <2> db 00000000b
  1329                              <2> 
  1330                              <2> ; =
  1331 00000E7A 00                  <2> db 00000000b
  1332 00000E7B 00                  <2> db 00000000b
  1333 00000E7C 00                  <2> db 00000000b
  1334 00000E7D 00                  <2> db 00000000b
  1335 00000E7E 00                  <2> db 00000000b
  1336 00000E7F F0                  <2> db 11110000b
  1337 00000E80 00                  <2> db 00000000b
  1338 00000E81 F0                  <2> db 11110000b
  1339 00000E82 00                  <2> db 00000000b
  1340 00000E83 00                  <2> db 00000000b
  1341 00000E84 00                  <2> db 00000000b
  1342 00000E85 00                  <2> db 00000000b
  1343                              <2> 
  1344                              <2> ; >
  1345 00000E86 00                  <2> db 00000000b
  1346 00000E87 00                  <2> db 00000000b
  1347 00000E88 00                  <2> db 00000000b
  1348 00000E89 80                  <2> db 10000000b
  1349 00000E8A 40                  <2> db 01000000b
  1350 00000E8B 20                  <2> db 00100000b
  1351 00000E8C 10                  <2> db 00010000b
  1352 00000E8D 20                  <2> db 00100000b
  1353 00000E8E 40                  <2> db 01000000b
  1354 00000E8F 80                  <2> db 10000000b
  1355 00000E90 00                  <2> db 00000000b
  1356 00000E91 00                  <2> db 00000000b
  1357                              <2> 
  1358                              <2> ; ?
  1359 00000E92 00                  <2> db 00000000b
  1360 00000E93 00                  <2> db 00000000b
  1361 00000E94 00                  <2> db 00000000b
  1362 00000E95 70                  <2> db 01110000b
  1363 00000E96 88                  <2> db 10001000b
  1364 00000E97 10                  <2> db 00010000b
  1365 00000E98 20                  <2> db 00100000b
  1366 00000E99 20                  <2> db 00100000b
  1367 00000E9A 00                  <2> db 00000000b
  1368 00000E9B 20                  <2> db 00100000b
  1369 00000E9C 00                  <2> db 00000000b
  1370 00000E9D 00                  <2> db 00000000b
  1371                              <2> 
  1372                              <2> ; @
  1373 00000E9E 00                  <2> db 00000000b
  1374 00000E9F 00                  <2> db 00000000b
  1375 00000EA0 00                  <2> db 00000000b
  1376 00000EA1 70                  <2> db 01110000b
  1377 00000EA2 88                  <2> db 10001000b
  1378 00000EA3 B8                  <2> db 10111000b
  1379 00000EA4 A8                  <2> db 10101000b
  1380 00000EA5 B8                  <2> db 10111000b
  1381 00000EA6 80                  <2> db 10000000b
  1382 00000EA7 78                  <2> db 01111000b
  1383 00000EA8 00                  <2> db 00000000b
  1384 00000EA9 00                  <2> db 00000000b
  1385                              <2> 
  1386                              <2> ; A
  1387 00000EAA 00                  <2> db 00000000b
  1388 00000EAB 00                  <2> db 00000000b
  1389 00000EAC 00                  <2> db 00000000b
  1390 00000EAD 70                  <2> db 01110000b
  1391 00000EAE 88                  <2> db 10001000b
  1392 00000EAF 88                  <2> db 10001000b
  1393 00000EB0 F8                  <2> db 11111000b
  1394 00000EB1 88                  <2> db 10001000b
  1395 00000EB2 88                  <2> db 10001000b
  1396 00000EB3 88                  <2> db 10001000b
  1397 00000EB4 00                  <2> db 00000000b
  1398 00000EB5 00                  <2> db 00000000b
  1399                              <2> 
  1400                              <2> ; B
  1401 00000EB6 00                  <2> db 00000000b
  1402 00000EB7 00                  <2> db 00000000b
  1403 00000EB8 00                  <2> db 00000000b
  1404 00000EB9 F0                  <2> db 11110000b
  1405 00000EBA 88                  <2> db 10001000b
  1406 00000EBB 88                  <2> db 10001000b
  1407 00000EBC F0                  <2> db 11110000b
  1408 00000EBD 88                  <2> db 10001000b
  1409 00000EBE 88                  <2> db 10001000b
  1410 00000EBF F0                  <2> db 11110000b
  1411 00000EC0 00                  <2> db 00000000b
  1412 00000EC1 00                  <2> db 00000000b
  1413                              <2> 
  1414                              <2> ; C
  1415 00000EC2 00                  <2> db 00000000b
  1416 00000EC3 00                  <2> db 00000000b
  1417 00000EC4 00                  <2> db 00000000b
  1418 00000EC5 70                  <2> db 01110000b
  1419 00000EC6 88                  <2> db 10001000b
  1420 00000EC7 80                  <2> db 10000000b
  1421 00000EC8 80                  <2> db 10000000b
  1422 00000EC9 80                  <2> db 10000000b
  1423 00000ECA 88                  <2> db 10001000b
  1424 00000ECB 70                  <2> db 01110000b
  1425 00000ECC 00                  <2> db 00000000b
  1426 00000ECD 00                  <2> db 00000000b
  1427                              <2> 
  1428                              <2> ; D
  1429 00000ECE 00                  <2> db 00000000b
  1430 00000ECF 00                  <2> db 00000000b
  1431 00000ED0 00                  <2> db 00000000b
  1432 00000ED1 F0                  <2> db 11110000b
  1433 00000ED2 88                  <2> db 10001000b
  1434 00000ED3 88                  <2> db 10001000b
  1435 00000ED4 88                  <2> db 10001000b
  1436 00000ED5 88                  <2> db 10001000b
  1437 00000ED6 88                  <2> db 10001000b
  1438 00000ED7 F0                  <2> db 11110000b
  1439 00000ED8 00                  <2> db 00000000b
  1440 00000ED9 00                  <2> db 00000000b
  1441                              <2> 
  1442                              <2> ; E
  1443 00000EDA 00                  <2> db 00000000b
  1444 00000EDB 00                  <2> db 00000000b
  1445 00000EDC 00                  <2> db 00000000b
  1446 00000EDD F8                  <2> db 11111000b
  1447 00000EDE 80                  <2> db 10000000b
  1448 00000EDF 80                  <2> db 10000000b
  1449 00000EE0 F0                  <2> db 11110000b
  1450 00000EE1 80                  <2> db 10000000b
  1451 00000EE2 80                  <2> db 10000000b
  1452 00000EE3 F8                  <2> db 11111000b
  1453 00000EE4 00                  <2> db 00000000b
  1454 00000EE5 00                  <2> db 00000000b
  1455                              <2> 
  1456                              <2> ; F
  1457 00000EE6 00                  <2> db 00000000b
  1458 00000EE7 00                  <2> db 00000000b
  1459 00000EE8 00                  <2> db 00000000b
  1460 00000EE9 F8                  <2> db 11111000b
  1461 00000EEA 80                  <2> db 10000000b
  1462 00000EEB 80                  <2> db 10000000b
  1463 00000EEC F0                  <2> db 11110000b
  1464 00000EED 80                  <2> db 10000000b
  1465 00000EEE 80                  <2> db 10000000b
  1466 00000EEF 80                  <2> db 10000000b
  1467 00000EF0 00                  <2> db 00000000b
  1468 00000EF1 00                  <2> db 00000000b
  1469                              <2> 
  1470                              <2> ; G
  1471 00000EF2 00                  <2> db 00000000b
  1472 00000EF3 00                  <2> db 00000000b
  1473 00000EF4 00                  <2> db 00000000b
  1474 00000EF5 70                  <2> db 01110000b
  1475 00000EF6 88                  <2> db 10001000b
  1476 00000EF7 80                  <2> db 10000000b
  1477 00000EF8 B8                  <2> db 10111000b
  1478 00000EF9 88                  <2> db 10001000b
  1479 00000EFA 88                  <2> db 10001000b
  1480 00000EFB 70                  <2> db 01110000b
  1481 00000EFC 00                  <2> db 00000000b
  1482 00000EFD 00                  <2> db 00000000b
  1483                              <2> 
  1484                              <2> ; H
  1485 00000EFE 00                  <2> db 00000000b
  1486 00000EFF 00                  <2> db 00000000b
  1487 00000F00 00                  <2> db 00000000b
  1488 00000F01 88                  <2> db 10001000b
  1489 00000F02 88                  <2> db 10001000b
  1490 00000F03 88                  <2> db 10001000b
  1491 00000F04 F8                  <2> db 11111000b
  1492 00000F05 88                  <2> db 10001000b
  1493 00000F06 88                  <2> db 10001000b
  1494 00000F07 88                  <2> db 10001000b
  1495 00000F08 00                  <2> db 00000000b
  1496 00000F09 00                  <2> db 00000000b
  1497                              <2> 
  1498                              <2> ; I
  1499 00000F0A 00                  <2> db 00000000b
  1500 00000F0B 00                  <2> db 00000000b
  1501 00000F0C 00                  <2> db 00000000b
  1502 00000F0D 70                  <2> db 01110000b
  1503 00000F0E 20                  <2> db 00100000b
  1504 00000F0F 20                  <2> db 00100000b
  1505 00000F10 20                  <2> db 00100000b
  1506 00000F11 20                  <2> db 00100000b
  1507 00000F12 20                  <2> db 00100000b
  1508 00000F13 70                  <2> db 01110000b
  1509 00000F14 00                  <2> db 00000000b
  1510 00000F15 00                  <2> db 00000000b
  1511                              <2> 
  1512                              <2> ; J
  1513 00000F16 00                  <2> db 00000000b
  1514 00000F17 00                  <2> db 00000000b
  1515 00000F18 00                  <2> db 00000000b
  1516 00000F19 78                  <2> db 01111000b
  1517 00000F1A 10                  <2> db 00010000b
  1518 00000F1B 10                  <2> db 00010000b
  1519 00000F1C 10                  <2> db 00010000b
  1520 00000F1D 10                  <2> db 00010000b
  1521 00000F1E 90                  <2> db 10010000b
  1522 00000F1F 60                  <2> db 01100000b
  1523 00000F20 00                  <2> db 00000000b
  1524 00000F21 00                  <2> db 00000000b
  1525                              <2> 
  1526                              <2> ; K
  1527 00000F22 00                  <2> db 00000000b
  1528 00000F23 00                  <2> db 00000000b
  1529 00000F24 00                  <2> db 00000000b
  1530 00000F25 88                  <2> db 10001000b
  1531 00000F26 90                  <2> db 10010000b
  1532 00000F27 A0                  <2> db 10100000b
  1533 00000F28 C0                  <2> db 11000000b
  1534 00000F29 A0                  <2> db 10100000b
  1535 00000F2A 90                  <2> db 10010000b
  1536 00000F2B 88                  <2> db 10001000b
  1537 00000F2C 00                  <2> db 00000000b
  1538 00000F2D 00                  <2> db 00000000b
  1539                              <2> 
  1540                              <2> ; L
  1541 00000F2E 00                  <2> db 00000000b
  1542 00000F2F 00                  <2> db 00000000b
  1543 00000F30 00                  <2> db 00000000b
  1544 00000F31 80                  <2> db 10000000b
  1545 00000F32 80                  <2> db 10000000b
  1546 00000F33 80                  <2> db 10000000b
  1547 00000F34 80                  <2> db 10000000b
  1548 00000F35 80                  <2> db 10000000b
  1549 00000F36 80                  <2> db 10000000b
  1550 00000F37 F8                  <2> db 11111000b
  1551 00000F38 00                  <2> db 00000000b
  1552 00000F39 00                  <2> db 00000000b
  1553                              <2> 
  1554                              <2> ; M
  1555 00000F3A 00                  <2> db 00000000b
  1556 00000F3B 00                  <2> db 00000000b
  1557 00000F3C 00                  <2> db 00000000b
  1558 00000F3D 88                  <2> db 10001000b
  1559 00000F3E D8                  <2> db 11011000b
  1560 00000F3F A8                  <2> db 10101000b
  1561 00000F40 88                  <2> db 10001000b
  1562 00000F41 88                  <2> db 10001000b
  1563 00000F42 88                  <2> db 10001000b
  1564 00000F43 88                  <2> db 10001000b
  1565 00000F44 00                  <2> db 00000000b
  1566 00000F45 00                  <2> db 00000000b
  1567                              <2> 
  1568                              <2> ; N
  1569 00000F46 00                  <2> db 00000000b
  1570 00000F47 00                  <2> db 00000000b
  1571 00000F48 00                  <2> db 00000000b
  1572 00000F49 88                  <2> db 10001000b
  1573 00000F4A C8                  <2> db 11001000b
  1574 00000F4B A8                  <2> db 10101000b
  1575 00000F4C 98                  <2> db 10011000b
  1576 00000F4D 88                  <2> db 10001000b
  1577 00000F4E 88                  <2> db 10001000b
  1578 00000F4F 88                  <2> db 10001000b
  1579 00000F50 00                  <2> db 00000000b
  1580 00000F51 00                  <2> db 00000000b
  1581                              <2> 
  1582                              <2> ; O
  1583 00000F52 00                  <2> db 00000000b
  1584 00000F53 00                  <2> db 00000000b
  1585 00000F54 00                  <2> db 00000000b
  1586 00000F55 70                  <2> db 01110000b
  1587 00000F56 88                  <2> db 10001000b
  1588 00000F57 88                  <2> db 10001000b
  1589 00000F58 88                  <2> db 10001000b
  1590 00000F59 88                  <2> db 10001000b
  1591 00000F5A 88                  <2> db 10001000b
  1592 00000F5B 70                  <2> db 01110000b
  1593 00000F5C 00                  <2> db 00000000b
  1594 00000F5D 00                  <2> db 00000000b
  1595                              <2> 
  1596                              <2> ; P
  1597 00000F5E 00                  <2> db 00000000b
  1598 00000F5F 00                  <2> db 00000000b
  1599 00000F60 00                  <2> db 00000000b
  1600 00000F61 F0                  <2> db 11110000b
  1601 00000F62 88                  <2> db 10001000b
  1602 00000F63 88                  <2> db 10001000b
  1603 00000F64 F0                  <2> db 11110000b
  1604 00000F65 80                  <2> db 10000000b
  1605 00000F66 80                  <2> db 10000000b
  1606 00000F67 80                  <2> db 10000000b
  1607 00000F68 00                  <2> db 00000000b
  1608 00000F69 00                  <2> db 00000000b
  1609                              <2> 
  1610                              <2> ; Q
  1611 00000F6A 00                  <2> db 00000000b
  1612 00000F6B 00                  <2> db 00000000b
  1613 00000F6C 00                  <2> db 00000000b
  1614 00000F6D 70                  <2> db 01110000b
  1615 00000F6E 88                  <2> db 10001000b
  1616 00000F6F 88                  <2> db 10001000b
  1617 00000F70 88                  <2> db 10001000b
  1618 00000F71 A8                  <2> db 10101000b
  1619 00000F72 90                  <2> db 10010000b
  1620 00000F73 68                  <2> db 01101000b
  1621 00000F74 00                  <2> db 00000000b
  1622 00000F75 00                  <2> db 00000000b
  1623                              <2> 
  1624                              <2> ; R
  1625 00000F76 00                  <2> db 00000000b
  1626 00000F77 00                  <2> db 00000000b
  1627 00000F78 00                  <2> db 00000000b
  1628 00000F79 F0                  <2> db 11110000b
  1629 00000F7A 88                  <2> db 10001000b
  1630 00000F7B 88                  <2> db 10001000b
  1631 00000F7C F0                  <2> db 11110000b
  1632 00000F7D A0                  <2> db 10100000b
  1633 00000F7E 90                  <2> db 10010000b
  1634 00000F7F 88                  <2> db 10001000b
  1635 00000F80 00                  <2> db 00000000b
  1636 00000F81 00                  <2> db 00000000b
  1637                              <2> 
  1638                              <2> ; S
  1639 00000F82 00                  <2> db 00000000b
  1640 00000F83 00                  <2> db 00000000b
  1641 00000F84 00                  <2> db 00000000b
  1642 00000F85 70                  <2> db 01110000b
  1643 00000F86 88                  <2> db 10001000b
  1644 00000F87 80                  <2> db 10000000b
  1645 00000F88 70                  <2> db 01110000b
  1646 00000F89 08                  <2> db 00001000b
  1647 00000F8A 88                  <2> db 10001000b
  1648 00000F8B 70                  <2> db 01110000b
  1649 00000F8C 00                  <2> db 00000000b
  1650 00000F8D 00                  <2> db 00000000b
  1651                              <2> 
  1652                              <2> ; T
  1653 00000F8E 00                  <2> db 00000000b
  1654 00000F8F 00                  <2> db 00000000b
  1655 00000F90 00                  <2> db 00000000b
  1656 00000F91 F8                  <2> db 11111000b
  1657 00000F92 20                  <2> db 00100000b
  1658 00000F93 20                  <2> db 00100000b
  1659 00000F94 20                  <2> db 00100000b
  1660 00000F95 20                  <2> db 00100000b
  1661 00000F96 20                  <2> db 00100000b
  1662 00000F97 20                  <2> db 00100000b
  1663 00000F98 00                  <2> db 00000000b
  1664 00000F99 00                  <2> db 00000000b
  1665                              <2> 
  1666                              <2> ; U
  1667 00000F9A 00                  <2> db 00000000b
  1668 00000F9B 00                  <2> db 00000000b
  1669 00000F9C 00                  <2> db 00000000b
  1670 00000F9D 88                  <2> db 10001000b
  1671 00000F9E 88                  <2> db 10001000b
  1672 00000F9F 88                  <2> db 10001000b
  1673 00000FA0 88                  <2> db 10001000b
  1674 00000FA1 88                  <2> db 10001000b
  1675 00000FA2 88                  <2> db 10001000b
  1676 00000FA3 70                  <2> db 01110000b
  1677 00000FA4 00                  <2> db 00000000b
  1678 00000FA5 00                  <2> db 00000000b
  1679                              <2> 
  1680                              <2> ; V
  1681 00000FA6 00                  <2> db 00000000b
  1682 00000FA7 00                  <2> db 00000000b
  1683 00000FA8 00                  <2> db 00000000b
  1684 00000FA9 88                  <2> db 10001000b
  1685 00000FAA 88                  <2> db 10001000b
  1686 00000FAB 88                  <2> db 10001000b
  1687 00000FAC 88                  <2> db 10001000b
  1688 00000FAD 88                  <2> db 10001000b
  1689 00000FAE 50                  <2> db 01010000b
  1690 00000FAF 20                  <2> db 00100000b
  1691 00000FB0 00                  <2> db 00000000b
  1692 00000FB1 00                  <2> db 00000000b
  1693                              <2> 
  1694                              <2> ; W
  1695 00000FB2 00                  <2> db 00000000b
  1696 00000FB3 00                  <2> db 00000000b
  1697 00000FB4 00                  <2> db 00000000b
  1698 00000FB5 88                  <2> db 10001000b
  1699 00000FB6 88                  <2> db 10001000b
  1700 00000FB7 88                  <2> db 10001000b
  1701 00000FB8 A8                  <2> db 10101000b
  1702 00000FB9 A8                  <2> db 10101000b
  1703 00000FBA D8                  <2> db 11011000b
  1704 00000FBB 88                  <2> db 10001000b
  1705 00000FBC 00                  <2> db 00000000b
  1706 00000FBD 00                  <2> db 00000000b
  1707                              <2> 
  1708                              <2> ; X
  1709 00000FBE 00                  <2> db 00000000b
  1710 00000FBF 00                  <2> db 00000000b
  1711 00000FC0 00                  <2> db 00000000b
  1712 00000FC1 88                  <2> db 10001000b
  1713 00000FC2 88                  <2> db 10001000b
  1714 00000FC3 50                  <2> db 01010000b
  1715 00000FC4 20                  <2> db 00100000b
  1716 00000FC5 50                  <2> db 01010000b
  1717 00000FC6 88                  <2> db 10001000b
  1718 00000FC7 88                  <2> db 10001000b
  1719 00000FC8 00                  <2> db 00000000b
  1720 00000FC9 00                  <2> db 00000000b
  1721                              <2> 
  1722                              <2> ; Y
  1723 00000FCA 00                  <2> db 00000000b
  1724 00000FCB 00                  <2> db 00000000b
  1725 00000FCC 00                  <2> db 00000000b
  1726 00000FCD 88                  <2> db 10001000b
  1727 00000FCE 88                  <2> db 10001000b
  1728 00000FCF 50                  <2> db 01010000b
  1729 00000FD0 20                  <2> db 00100000b
  1730 00000FD1 20                  <2> db 00100000b
  1731 00000FD2 20                  <2> db 00100000b
  1732 00000FD3 20                  <2> db 00100000b
  1733 00000FD4 00                  <2> db 00000000b
  1734 00000FD5 00                  <2> db 00000000b
  1735                              <2> 
  1736                              <2> ; Z
  1737 00000FD6 00                  <2> db 00000000b
  1738 00000FD7 00                  <2> db 00000000b
  1739 00000FD8 00                  <2> db 00000000b
  1740 00000FD9 F8                  <2> db 11111000b
  1741 00000FDA 08                  <2> db 00001000b
  1742 00000FDB 10                  <2> db 00010000b
  1743 00000FDC 20                  <2> db 00100000b
  1744 00000FDD 40                  <2> db 01000000b
  1745 00000FDE 80                  <2> db 10000000b
  1746 00000FDF F8                  <2> db 11111000b
  1747 00000FE0 00                  <2> db 00000000b
  1748 00000FE1 00                  <2> db 00000000b
  1749                              <2> 
  1750                              <2> ; [
  1751 00000FE2 00                  <2> db 00000000b
  1752 00000FE3 00                  <2> db 00000000b
  1753 00000FE4 00                  <2> db 00000000b
  1754 00000FE5 70                  <2> db 01110000b
  1755 00000FE6 40                  <2> db 01000000b
  1756 00000FE7 40                  <2> db 01000000b
  1757 00000FE8 40                  <2> db 01000000b
  1758 00000FE9 40                  <2> db 01000000b
  1759 00000FEA 40                  <2> db 01000000b
  1760 00000FEB 70                  <2> db 01110000b
  1761 00000FEC 00                  <2> db 00000000b
  1762 00000FED 00                  <2> db 00000000b
  1763                              <2> 
  1764                              <2> ; backslash
  1765 00000FEE 00                  <2> db 00000000b
  1766 00000FEF 00                  <2> db 00000000b
  1767 00000FF0 00                  <2> db 00000000b
  1768 00000FF1 00                  <2> db 00000000b
  1769 00000FF2 80                  <2> db 10000000b
  1770 00000FF3 40                  <2> db 01000000b
  1771 00000FF4 20                  <2> db 00100000b
  1772 00000FF5 10                  <2> db 00010000b
  1773 00000FF6 08                  <2> db 00001000b
  1774 00000FF7 00                  <2> db 00000000b
  1775 00000FF8 00                  <2> db 00000000b
  1776 00000FF9 00                  <2> db 00000000b
  1777                              <2> 
  1778                              <2> ; ]
  1779 00000FFA 00                  <2> db 00000000b
  1780 00000FFB 00                  <2> db 00000000b
  1781 00000FFC 00                  <2> db 00000000b
  1782 00000FFD 70                  <2> db 01110000b
  1783 00000FFE 10                  <2> db 00010000b
  1784 00000FFF 10                  <2> db 00010000b
  1785 00001000 10                  <2> db 00010000b
  1786 00001001 10                  <2> db 00010000b
  1787 00001002 10                  <2> db 00010000b
  1788 00001003 70                  <2> db 01110000b
  1789 00001004 00                  <2> db 00000000b
  1790 00001005 00                  <2> db 00000000b
  1791                              <2> 
  1792                              <2> ; ^
  1793 00001006 00                  <2> db 00000000b
  1794 00001007 00                  <2> db 00000000b
  1795 00001008 00                  <2> db 00000000b
  1796 00001009 20                  <2> db 00100000b
  1797 0000100A 50                  <2> db 01010000b
  1798 0000100B 00                  <2> db 00000000b
  1799 0000100C 00                  <2> db 00000000b
  1800 0000100D 00                  <2> db 00000000b
  1801 0000100E 00                  <2> db 00000000b
  1802 0000100F 00                  <2> db 00000000b
  1803 00001010 00                  <2> db 00000000b
  1804 00001011 00                  <2> db 00000000b
  1805                              <2> 
  1806                              <2> ; _
  1807 00001012 00                  <2> db 00000000b
  1808 00001013 00                  <2> db 00000000b
  1809 00001014 00                  <2> db 00000000b
  1810 00001015 00                  <2> db 00000000b
  1811 00001016 00                  <2> db 00000000b
  1812 00001017 00                  <2> db 00000000b
  1813 00001018 00                  <2> db 00000000b
  1814 00001019 00                  <2> db 00000000b
  1815 0000101A 00                  <2> db 00000000b
  1816 0000101B F8                  <2> db 11111000b
  1817 0000101C 00                  <2> db 00000000b
  1818 0000101D 00                  <2> db 00000000b
  1819                              <2> 
  1820                              <2> ; `
  1821 0000101E 00                  <2> db 00000000b
  1822 0000101F 00                  <2> db 00000000b
  1823 00001020 00                  <2> db 00000000b
  1824 00001021 40                  <2> db 01000000b
  1825 00001022 40                  <2> db 01000000b
  1826 00001023 20                  <2> db 00100000b
  1827 00001024 00                  <2> db 00000000b
  1828 00001025 00                  <2> db 00000000b
  1829 00001026 00                  <2> db 00000000b
  1830 00001027 00                  <2> db 00000000b
  1831 00001028 00                  <2> db 00000000b
  1832 00001029 00                  <2> db 00000000b
  1833                              <2> 
  1834                              <2> ; a
  1835 0000102A 00                  <2> db 00000000b
  1836 0000102B 00                  <2> db 00000000b
  1837 0000102C 00                  <2> db 00000000b
  1838 0000102D 00                  <2> db 00000000b
  1839 0000102E 00                  <2> db 00000000b
  1840 0000102F 78                  <2> db 01111000b
  1841 00001030 88                  <2> db 10001000b
  1842 00001031 88                  <2> db 10001000b
  1843 00001032 98                  <2> db 10011000b
  1844 00001033 68                  <2> db 01101000b
  1845 00001034 00                  <2> db 00000000b
  1846 00001035 00                  <2> db 00000000b
  1847                              <2> 
  1848                              <2> ; b
  1849 00001036 00                  <2> db 00000000b
  1850 00001037 00                  <2> db 00000000b
  1851 00001038 00                  <2> db 00000000b
  1852 00001039 80                  <2> db 10000000b
  1853 0000103A 80                  <2> db 10000000b
  1854 0000103B F0                  <2> db 11110000b
  1855 0000103C 88                  <2> db 10001000b
  1856 0000103D 88                  <2> db 10001000b
  1857 0000103E 88                  <2> db 10001000b
  1858 0000103F F0                  <2> db 11110000b
  1859 00001040 00                  <2> db 00000000b
  1860 00001041 00                  <2> db 00000000b
  1861                              <2> 
  1862                              <2> ; c
  1863 00001042 00                  <2> db 00000000b
  1864 00001043 00                  <2> db 00000000b
  1865 00001044 00                  <2> db 00000000b
  1866 00001045 00                  <2> db 00000000b
  1867 00001046 00                  <2> db 00000000b
  1868 00001047 70                  <2> db 01110000b
  1869 00001048 88                  <2> db 10001000b
  1870 00001049 80                  <2> db 10000000b
  1871 0000104A 88                  <2> db 10001000b
  1872 0000104B 70                  <2> db 01110000b
  1873 0000104C 00                  <2> db 00000000b
  1874 0000104D 00                  <2> db 00000000b
  1875                              <2> 
  1876                              <2> ; d
  1877 0000104E 00                  <2> db 00000000b
  1878 0000104F 00                  <2> db 00000000b
  1879 00001050 00                  <2> db 00000000b
  1880 00001051 08                  <2> db 00001000b
  1881 00001052 08                  <2> db 00001000b
  1882 00001053 78                  <2> db 01111000b
  1883 00001054 88                  <2> db 10001000b
  1884 00001055 88                  <2> db 10001000b
  1885 00001056 88                  <2> db 10001000b
  1886 00001057 78                  <2> db 01111000b
  1887 00001058 00                  <2> db 00000000b
  1888 00001059 00                  <2> db 00000000b
  1889                              <2> 
  1890                              <2> ; e
  1891 0000105A 00                  <2> db 00000000b
  1892 0000105B 00                  <2> db 00000000b
  1893 0000105C 00                  <2> db 00000000b
  1894 0000105D 00                  <2> db 00000000b
  1895 0000105E 00                  <2> db 00000000b
  1896 0000105F 70                  <2> db 01110000b
  1897 00001060 88                  <2> db 10001000b
  1898 00001061 F8                  <2> db 11111000b
  1899 00001062 80                  <2> db 10000000b
  1900 00001063 70                  <2> db 01110000b
  1901 00001064 00                  <2> db 00000000b
  1902 00001065 00                  <2> db 00000000b
  1903                              <2> 
  1904                              <2> ; f
  1905 00001066 00                  <2> db 00000000b
  1906 00001067 00                  <2> db 00000000b
  1907 00001068 00                  <2> db 00000000b
  1908 00001069 20                  <2> db 00100000b
  1909 0000106A 50                  <2> db 01010000b
  1910 0000106B 40                  <2> db 01000000b
  1911 0000106C E0                  <2> db 11100000b
  1912 0000106D 40                  <2> db 01000000b
  1913 0000106E 40                  <2> db 01000000b
  1914 0000106F 40                  <2> db 01000000b
  1915 00001070 00                  <2> db 00000000b
  1916 00001071 00                  <2> db 00000000b
  1917                              <2> 
  1918                              <2> ; g
  1919 00001072 00                  <2> db 00000000b
  1920 00001073 00                  <2> db 00000000b
  1921 00001074 00                  <2> db 00000000b
  1922 00001075 00                  <2> db 00000000b
  1923 00001076 00                  <2> db 00000000b
  1924 00001077 78                  <2> db 01111000b
  1925 00001078 88                  <2> db 10001000b
  1926 00001079 88                  <2> db 10001000b
  1927 0000107A 88                  <2> db 10001000b
  1928 0000107B 78                  <2> db 01111000b
  1929 0000107C 08                  <2> db 00001000b
  1930 0000107D F0                  <2> db 11110000b
  1931                              <2> 
  1932                              <2> ; h
  1933 0000107E 00                  <2> db 00000000b
  1934 0000107F 00                  <2> db 00000000b
  1935 00001080 00                  <2> db 00000000b
  1936 00001081 80                  <2> db 10000000b
  1937 00001082 80                  <2> db 10000000b
  1938 00001083 F0                  <2> db 11110000b
  1939 00001084 88                  <2> db 10001000b
  1940 00001085 88                  <2> db 10001000b
  1941 00001086 88                  <2> db 10001000b
  1942 00001087 88                  <2> db 10001000b
  1943 00001088 00                  <2> db 00000000b
  1944 00001089 00                  <2> db 00000000b
  1945                              <2> 
  1946                              <2> ; i
  1947 0000108A 00                  <2> db 00000000b
  1948 0000108B 00                  <2> db 00000000b
  1949 0000108C 00                  <2> db 00000000b
  1950 0000108D 20                  <2> db 00100000b
  1951 0000108E 00                  <2> db 00000000b
  1952 0000108F 60                  <2> db 01100000b
  1953 00001090 20                  <2> db 00100000b
  1954 00001091 20                  <2> db 00100000b
  1955 00001092 20                  <2> db 00100000b
  1956 00001093 70                  <2> db 01110000b
  1957 00001094 00                  <2> db 00000000b
  1958 00001095 00                  <2> db 00000000b
  1959                              <2> 
  1960                              <2> ; j
  1961 00001096 00                  <2> db 00000000b
  1962 00001097 00                  <2> db 00000000b
  1963 00001098 00                  <2> db 00000000b
  1964 00001099 10                  <2> db 00010000b
  1965 0000109A 00                  <2> db 00000000b
  1966 0000109B 10                  <2> db 00010000b
  1967 0000109C 10                  <2> db 00010000b
  1968 0000109D 10                  <2> db 00010000b
  1969 0000109E 10                  <2> db 00010000b
  1970 0000109F 10                  <2> db 00010000b
  1971 000010A0 10                  <2> db 00010000b
  1972 000010A1 60                  <2> db 01100000b
  1973                              <2> 
  1974                              <2> ; k
  1975 000010A2 00                  <2> db 00000000b
  1976 000010A3 00                  <2> db 00000000b
  1977 000010A4 00                  <2> db 00000000b
  1978 000010A5 80                  <2> db 10000000b
  1979 000010A6 80                  <2> db 10000000b
  1980 000010A7 90                  <2> db 10010000b
  1981 000010A8 A0                  <2> db 10100000b
  1982 000010A9 C0                  <2> db 11000000b
  1983 000010AA A0                  <2> db 10100000b
  1984 000010AB 90                  <2> db 10010000b
  1985 000010AC 00                  <2> db 00000000b
  1986 000010AD 00                  <2> db 00000000b
  1987                              <2> 
  1988                              <2> ; l
  1989 000010AE 00                  <2> db 00000000b
  1990 000010AF 00                  <2> db 00000000b
  1991 000010B0 00                  <2> db 00000000b
  1992 000010B1 60                  <2> db 01100000b
  1993 000010B2 20                  <2> db 00100000b
  1994 000010B3 20                  <2> db 00100000b
  1995 000010B4 20                  <2> db 00100000b
  1996 000010B5 20                  <2> db 00100000b
  1997 000010B6 20                  <2> db 00100000b
  1998 000010B7 70                  <2> db 01110000b
  1999 000010B8 00                  <2> db 00000000b
  2000 000010B9 00                  <2> db 00000000b
  2001                              <2> 
  2002                              <2> ; m
  2003 000010BA 00                  <2> db 00000000b
  2004 000010BB 00                  <2> db 00000000b
  2005 000010BC 00                  <2> db 00000000b
  2006 000010BD 00                  <2> db 00000000b
  2007 000010BE 00                  <2> db 00000000b
  2008 000010BF 50                  <2> db 01010000b
  2009 000010C0 A8                  <2> db 10101000b
  2010 000010C1 A8                  <2> db 10101000b
  2011 000010C2 88                  <2> db 10001000b
  2012 000010C3 88                  <2> db 10001000b
  2013 000010C4 00                  <2> db 00000000b
  2014 000010C5 00                  <2> db 00000000b
  2015                              <2> 
  2016                              <2> ; n
  2017 000010C6 00                  <2> db 00000000b
  2018 000010C7 00                  <2> db 00000000b
  2019 000010C8 00                  <2> db 00000000b
  2020 000010C9 00                  <2> db 00000000b
  2021 000010CA 00                  <2> db 00000000b
  2022 000010CB F0                  <2> db 11110000b
  2023 000010CC 88                  <2> db 10001000b
  2024 000010CD 88                  <2> db 10001000b
  2025 000010CE 88                  <2> db 10001000b
  2026 000010CF 88                  <2> db 10001000b
  2027 000010D0 00                  <2> db 00000000b
  2028 000010D1 00                  <2> db 00000000b
  2029                              <2> 
  2030                              <2> ; o
  2031 000010D2 00                  <2> db 00000000b
  2032 000010D3 00                  <2> db 00000000b
  2033 000010D4 00                  <2> db 00000000b
  2034 000010D5 00                  <2> db 00000000b
  2035 000010D6 00                  <2> db 00000000b
  2036 000010D7 70                  <2> db 01110000b
  2037 000010D8 88                  <2> db 10001000b
  2038 000010D9 88                  <2> db 10001000b
  2039 000010DA 88                  <2> db 10001000b
  2040 000010DB 70                  <2> db 01110000b
  2041 000010DC 00                  <2> db 00000000b
  2042 000010DD 00                  <2> db 00000000b
  2043                              <2> 
  2044                              <2> ; p
  2045 000010DE 00                  <2> db 00000000b
  2046 000010DF 00                  <2> db 00000000b
  2047 000010E0 00                  <2> db 00000000b
  2048 000010E1 00                  <2> db 00000000b
  2049 000010E2 00                  <2> db 00000000b
  2050 000010E3 F0                  <2> db 11110000b
  2051 000010E4 88                  <2> db 10001000b
  2052 000010E5 88                  <2> db 10001000b
  2053 000010E6 88                  <2> db 10001000b
  2054 000010E7 F0                  <2> db 11110000b
  2055 000010E8 80                  <2> db 10000000b
  2056 000010E9 80                  <2> db 10000000b
  2057                              <2> 
  2058                              <2> ; q
  2059 000010EA 00                  <2> db 00000000b
  2060 000010EB 00                  <2> db 00000000b
  2061 000010EC 00                  <2> db 00000000b
  2062 000010ED 00                  <2> db 00000000b
  2063 000010EE 00                  <2> db 00000000b
  2064 000010EF 78                  <2> db 01111000b
  2065 000010F0 88                  <2> db 10001000b
  2066 000010F1 88                  <2> db 10001000b
  2067 000010F2 88                  <2> db 10001000b
  2068 000010F3 78                  <2> db 01111000b
  2069 000010F4 08                  <2> db 00001000b
  2070 000010F5 08                  <2> db 00001000b
  2071                              <2> 
  2072                              <2> ; r
  2073 000010F6 00                  <2> db 00000000b
  2074 000010F7 00                  <2> db 00000000b
  2075 000010F8 00                  <2> db 00000000b
  2076 000010F9 00                  <2> db 00000000b
  2077 000010FA 00                  <2> db 00000000b
  2078 000010FB B0                  <2> db 10110000b
  2079 000010FC C8                  <2> db 11001000b
  2080 000010FD 80                  <2> db 10000000b
  2081 000010FE 80                  <2> db 10000000b
  2082 000010FF 80                  <2> db 10000000b
  2083 00001100 00                  <2> db 00000000b
  2084 00001101 00                  <2> db 00000000b
  2085                              <2> 
  2086                              <2> ; s
  2087 00001102 00                  <2> db 00000000b
  2088 00001103 00                  <2> db 00000000b
  2089 00001104 00                  <2> db 00000000b
  2090 00001105 00                  <2> db 00000000b
  2091 00001106 00                  <2> db 00000000b
  2092 00001107 78                  <2> db 01111000b
  2093 00001108 80                  <2> db 10000000b
  2094 00001109 70                  <2> db 01110000b
  2095 0000110A 08                  <2> db 00001000b
  2096 0000110B F0                  <2> db 11110000b
  2097 0000110C 00                  <2> db 00000000b
  2098 0000110D 00                  <2> db 00000000b
  2099                              <2> 
  2100                              <2> ; t
  2101 0000110E 00                  <2> db 00000000b
  2102 0000110F 00                  <2> db 00000000b
  2103 00001110 00                  <2> db 00000000b
  2104 00001111 40                  <2> db 01000000b
  2105 00001112 40                  <2> db 01000000b
  2106 00001113 E0                  <2> db 11100000b
  2107 00001114 40                  <2> db 01000000b
  2108 00001115 40                  <2> db 01000000b
  2109 00001116 40                  <2> db 01000000b
  2110 00001117 30                  <2> db 00110000b
  2111 00001118 00                  <2> db 00000000b
  2112 00001119 00                  <2> db 00000000b
  2113                              <2> 
  2114                              <2> ; u
  2115 0000111A 00                  <2> db 00000000b
  2116 0000111B 00                  <2> db 00000000b
  2117 0000111C 00                  <2> db 00000000b
  2118 0000111D 00                  <2> db 00000000b
  2119 0000111E 00                  <2> db 00000000b
  2120 0000111F 88                  <2> db 10001000b
  2121 00001120 88                  <2> db 10001000b
  2122 00001121 88                  <2> db 10001000b
  2123 00001122 88                  <2> db 10001000b
  2124 00001123 70                  <2> db 01110000b
  2125 00001124 00                  <2> db 00000000b
  2126 00001125 00                  <2> db 00000000b
  2127                              <2> 
  2128                              <2> ; v
  2129 00001126 00                  <2> db 00000000b
  2130 00001127 00                  <2> db 00000000b
  2131 00001128 00                  <2> db 00000000b
  2132 00001129 00                  <2> db 00000000b
  2133 0000112A 00                  <2> db 00000000b
  2134 0000112B 88                  <2> db 10001000b
  2135 0000112C 88                  <2> db 10001000b
  2136 0000112D 88                  <2> db 10001000b
  2137 0000112E 50                  <2> db 01010000b
  2138 0000112F 20                  <2> db 00100000b
  2139 00001130 00                  <2> db 00000000b
  2140 00001131 00                  <2> db 00000000b
  2141                              <2> 
  2142                              <2> ; w
  2143 00001132 00                  <2> db 00000000b
  2144 00001133 00                  <2> db 00000000b
  2145 00001134 00                  <2> db 00000000b
  2146 00001135 00                  <2> db 00000000b
  2147 00001136 00                  <2> db 00000000b
  2148 00001137 88                  <2> db 10001000b
  2149 00001138 A8                  <2> db 10101000b
  2150 00001139 A8                  <2> db 10101000b
  2151 0000113A A8                  <2> db 10101000b
  2152 0000113B 50                  <2> db 01010000b
  2153 0000113C 00                  <2> db 00000000b
  2154 0000113D 00                  <2> db 00000000b
  2155                              <2> 
  2156                              <2> ; x
  2157 0000113E 00                  <2> db 00000000b
  2158 0000113F 00                  <2> db 00000000b
  2159 00001140 00                  <2> db 00000000b
  2160 00001141 00                  <2> db 00000000b
  2161 00001142 00                  <2> db 00000000b
  2162 00001143 88                  <2> db 10001000b
  2163 00001144 50                  <2> db 01010000b
  2164 00001145 20                  <2> db 00100000b
  2165 00001146 50                  <2> db 01010000b
  2166 00001147 88                  <2> db 10001000b
  2167 00001148 00                  <2> db 00000000b
  2168 00001149 00                  <2> db 00000000b
  2169                              <2> 
  2170                              <2> ; y
  2171 0000114A 00                  <2> db 00000000b
  2172 0000114B 00                  <2> db 00000000b
  2173 0000114C 00                  <2> db 00000000b
  2174 0000114D 00                  <2> db 00000000b
  2175 0000114E 00                  <2> db 00000000b
  2176 0000114F 88                  <2> db 10001000b
  2177 00001150 88                  <2> db 10001000b
  2178 00001151 88                  <2> db 10001000b
  2179 00001152 88                  <2> db 10001000b
  2180 00001153 78                  <2> db 01111000b
  2181 00001154 08                  <2> db 00001000b
  2182 00001155 70                  <2> db 01110000b
  2183                              <2> 
  2184                              <2> ; z
  2185 00001156 00                  <2> db 00000000b
  2186 00001157 00                  <2> db 00000000b
  2187 00001158 00                  <2> db 00000000b
  2188 00001159 00                  <2> db 00000000b
  2189 0000115A 00                  <2> db 00000000b
  2190 0000115B F8                  <2> db 11111000b
  2191 0000115C 10                  <2> db 00010000b
  2192 0000115D 20                  <2> db 00100000b
  2193 0000115E 40                  <2> db 01000000b
  2194 0000115F F8                  <2> db 11111000b
  2195 00001160 00                  <2> db 00000000b
  2196 00001161 00                  <2> db 00000000b
  2197                              <2> 
  2198                              <2> ; {
  2199 00001162 00                  <2> db 00000000b
  2200 00001163 00                  <2> db 00000000b
  2201 00001164 00                  <2> db 00000000b
  2202 00001165 10                  <2> db 00010000b
  2203 00001166 20                  <2> db 00100000b
  2204 00001167 20                  <2> db 00100000b
  2205 00001168 40                  <2> db 01000000b
  2206 00001169 20                  <2> db 00100000b
  2207 0000116A 20                  <2> db 00100000b
  2208 0000116B 10                  <2> db 00010000b
  2209 0000116C 00                  <2> db 00000000b
  2210 0000116D 00                  <2> db 00000000b
  2211                              <2> 
  2212                              <2> ; |
  2213 0000116E 00                  <2> db 00000000b
  2214 0000116F 00                  <2> db 00000000b
  2215 00001170 00                  <2> db 00000000b
  2216 00001171 20                  <2> db 00100000b
  2217 00001172 20                  <2> db 00100000b
  2218 00001173 20                  <2> db 00100000b
  2219 00001174 20                  <2> db 00100000b
  2220 00001175 20                  <2> db 00100000b
  2221 00001176 20                  <2> db 00100000b
  2222 00001177 20                  <2> db 00100000b
  2223 00001178 00                  <2> db 00000000b
  2224 00001179 00                  <2> db 00000000b
  2225                              <2> 
  2226                              <2> ; }
  2227 0000117A 00                  <2> db 00000000b
  2228 0000117B 00                  <2> db 00000000b
  2229 0000117C 00                  <2> db 00000000b
  2230 0000117D 40                  <2> db 01000000b
  2231 0000117E 20                  <2> db 00100000b
  2232 0000117F 20                  <2> db 00100000b
  2233 00001180 10                  <2> db 00010000b
  2234 00001181 20                  <2> db 00100000b
  2235 00001182 20                  <2> db 00100000b
  2236 00001183 40                  <2> db 01000000b
  2237 00001184 00                  <2> db 00000000b
  2238 00001185 00                  <2> db 00000000b
  2239                              <2> 
  2240                              <2> ; ~
  2241 00001186 00                  <2> db 00000000b
  2242 00001187 00                  <2> db 00000000b
  2243 00001188 00                  <2> db 00000000b
  2244 00001189 50                  <2> db 01010000b
  2245 0000118A A0                  <2> db 10100000b
  2246 0000118B 00                  <2> db 00000000b
  2247 0000118C 00                  <2> db 00000000b
  2248 0000118D 00                  <2> db 00000000b
  2249 0000118E 00                  <2> db 00000000b
  2250 0000118F 00                  <2> db 00000000b
  2251 00001190 00                  <2> db 00000000b
  2252 00001191 00                  <2> db 00000000b
  2253                              <2> 
  2254                              <2> ; block
  2255 00001192 F8                  <2> db 11111000b
  2256 00001193 F8                  <2> db 11111000b
  2257 00001194 F8                  <2> db 11111000b
  2258 00001195 F8                  <2> db 11111000b
  2259 00001196 F8                  <2> db 11111000b
  2260 00001197 F8                  <2> db 11111000b
  2261 00001198 F8                  <2> db 11111000b
  2262 00001199 F8                  <2> db 11111000b
  2263 0000119A F8                  <2> db 11111000b
  2264 0000119B F8                  <2> db 11111000b
  2265 0000119C F8                  <2> db 11111000b
  2266 0000119D F8                  <2> db 11111000b
  2267                              <2> 
  2268 0000119E 00                  <2> font_data_end db 0
  2269                              <2> 
  2270                              <2> ; =============================================================================
  2271                              <2> ; EOF
   915                              <1> 
   916 0000119F 00                  <1> temp_string: db 0
   917 000011A0 00<rep 32h>         <1> temp_string1: times 50 db 0
   918 000011D2 00<rep 32h>         <1> temp_string2: times 50 db 0
   919                              <1> 
   920 00001204 30783A2000          <1> os_debug_dump_mem_chars: db '0x: ', 0
   921                              <1> 
   922                              <1> ; -----------------------------------------------------------------------------
   923                              <1> ; Constants
   924                              <1> 
   925 00001209 0000000000          <1> tchar:          db  0, 0, 0, 0, 0
   926 0000120E 303132333435363738- <1> hextable: 		db '0123456789ABCDEF', 0
   926 00001217 3941424344454600    <1>
   927 0000121F 3A00                <1> colon:          db ':', 0
   928                              <1> ; EOF
   850                                  
   851                                  ; =============================================================================
   852                                  ; EOF
   853                                  
